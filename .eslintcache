[{"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\index.js":"1","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\App.js":"2","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\reportWebVitals.js":"3","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\index.js":"4","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\index.js":"5","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\home\\index.js":"6","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\about\\index.js":"7","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\experience\\index.js":"8","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\projects\\index.js":"9","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\contact\\index.js":"10","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\education\\index.js":"11","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\blog\\index.js":"12","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\skills\\index.js":"13","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\svgs\\index.js":"14","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\components\\carousel.js":"15","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\menu\\index.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":965,"mtime":1617090620374,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":5929,"mtime":1625538750226,"results":"21","hashOfConfig":"18"},{"size":5860,"mtime":1625536642418,"results":"22","hashOfConfig":"18"},{"size":6319,"mtime":1623120892221,"results":"23","hashOfConfig":"18"},{"size":1306,"mtime":1625539696322,"results":"24","hashOfConfig":"18"},{"size":4392,"mtime":1625539742162,"results":"25","hashOfConfig":"18"},{"size":2971,"mtime":1625539750241,"results":"26","hashOfConfig":"18"},{"size":1053,"mtime":1625539723355,"results":"27","hashOfConfig":"18"},{"size":4905,"mtime":1625539734213,"results":"28","hashOfConfig":"18"},{"size":203,"mtime":1615882965641,"results":"29","hashOfConfig":"18"},{"size":3534,"mtime":1625539794765,"results":"30","hashOfConfig":"18"},{"size":16061,"mtime":1618899522953,"results":"31","hashOfConfig":"18"},{"size":1903,"mtime":1625539465453,"results":"32","hashOfConfig":"18"},{"size":2805,"mtime":1615858019297,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"loexyc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\index.js",[],["78","79"],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\App.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\reportWebVitals.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\index.js",["80","81","82","83","84","85","86"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport './header.css';\r\nimport { IoMdClose, IoMdMenu } from \"react-icons/io\";\r\n\r\nimport { Menu } from './menu';\r\n\r\n\r\nimport { ReactComponent  as FullStack } from '../svgs/fullstack.svg';\r\n\r\nimport { \r\n\r\n    FaRegEnvelope,\r\n    FaLinkedin,\r\n    FaGithub,\r\n    FaEnvelope,\r\n} from \"react-icons/fa\";\r\n\r\nimport { \r\n    FiGithub,\r\n    FiLinkedin,\r\n    FiMail\r\n} from \"react-icons/fi\";\r\n\r\nimport { IconSVG } from '../svgs'\r\n\r\n\r\n\r\n\r\n\r\nexport const Header = props => {\r\n\r\n    \r\n    const [menuHidden, setMenuHidden] = useState(true);\r\n\r\n \r\n    const onSelectMenuOption = (option) => {\r\n        props.navigate(option)\r\n        toggleMenu();\r\n    }\r\n\r\n    function toggleMenu(e) {\r\n\r\n        if(menuHidden){\r\n            setMenuHidden(false);\r\n        } else {\r\n            setMenuHidden(true);\r\n        }\r\n      }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"menu-overlay-div\" style={styles.MenuOverlayDiv(menuHidden)}>\r\n                <div className=\"menu-toggler-div\"  style={styles.menuTogglerDiv(menuHidden)} >\r\n                    <button className=\"menu-toggler-btn\" onClick={toggleMenu}>\r\n                        { menuHidden ? <IoMdMenu style={styles.icon}/> :  <IoMdClose style={styles.icon}/> }       \r\n                    </button>\r\n                </div>\r\n                <div className='menu-items-div' style={styles.menuItemsDiv(menuHidden)}>\r\n                 <Menu \r\n                    items={props.menuItems}\r\n                    selected={props.selectedItem}\r\n                    onItemSelect={onSelectMenuOption}/>\r\n            </div>\r\n            </div>\r\n            <div className='menu-badge-logo-div'>\r\n                <MenuBadge onItemSelect={props.navigate}/>\r\n            </div>\r\n            <div className='menu-options-div'>\r\n                <Menu \r\n                    items={props.menuItems}\r\n                    selected={props.selectedItem}\r\n                    onItemSelect={props.navigate}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nconst MenuBadge = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"badge-div\"\r\n            onClick={()=>props.onItemSelect(\"home\")}>\r\n            <div className=\"badge-logo-div\"> \r\n                <IconSVG name={'full stack'} fill=\"#86acbe\" width=\"70%\" height=\"70%\"/>\r\n            </div>\r\n            <div className=\"badge-title-div\"> \r\n                Full Stack\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst MenuMyInfo = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='menu-my-name-div'>\r\n                    Ayoub Soud\r\n                </div>                \r\n            <div className='menu-my-title-div'>\r\n                    Full Stack Web & mobile Software Engineer\r\n                </div>                \r\n            <div className='menu-my-socials-div'>\r\n                <span className=\"menu-social-btn\" \r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href='https://www.linkedin.com/in/ayoubsoud/';\r\n                        }}>\r\n                    <FiLinkedin />                    \r\n                </span>\r\n                <span className=\"menu-social-btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href='https://github.com/techyoob';\r\n                        }}>\r\n                    <FiGithub />\r\n                </span>\r\n                <span className=\"menu-social-btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            window.location.href='mailto:techyoob@gmail.com';\r\n                            }}>\r\n                        <FiMail />\r\n                    </span>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n// export const Header = props => {\r\n\r\n    \r\n//     const [menuHidden, setMenuHidden] = useState(true);\r\n\r\n\r\n\r\n//     function toggleMenu(e) {\r\n\r\n//         if(menuHidden){\r\n//             setMenuHidden(false);\r\n//         } else {\r\n//             setMenuHidden(true);\r\n//         }\r\n//       }\r\n    \r\n\r\n//     return (\r\n//         <>\r\n//             <div className=\"handheld-menu-div\" style={styles.handheldMenuDiv(menuHidden)}>\r\n//                 <div className=\".menu-toggler-div\"  style={styles.menuTogglerDiv(menuHidden)} >\r\n//                     <button className=\"menu-toggler-btn\" onClick={toggleMenu}>\r\n//                         { menuHidden ? <IoMdMenu style={styles.icon}/> :  <IoMdClose style={styles.icon}/> }       \r\n//                     </button>\r\n//                 </div>\r\n//                 <div className='menu-items-div' style={styles.menuItemsDiv(menuHidden)}>\r\n//                     <Menu \r\n//                         items={props.menuItems}\r\n//                         selected={props.selectedItem}\r\n//                         onItemSelect={props.navigate}/>\r\n//                 </div>\r\n//             </div>\r\n//             <div className='menu-badge-div'>\r\n//             </div>\r\n//             <div className='menu-div' >\r\n//                 <Menu \r\n//                     items={props.menuItems}\r\n//                     selected={props.selectedItem}\r\n//                     onItemSelect={props.navigate}/>\r\n//             </div>\r\n\r\n//         </>\r\n//     );\r\n// };\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    icon: {\r\n      color:'#ffffff',\r\n      fontSize:'30px'\r\n    },\r\n    MenuOverlayDiv: menuHidden => ({\r\n        position: menuHidden? \"relative\" : \"absolute\",\r\n        width: menuHidden ? \"60px\" : \"45vw\",\r\n        height: \"100%\",\r\n        minHeight: menuHidden ? \"100%\" : \"650px\"\r\n    }),\r\n    menuItemsDiv: menuHidden => ({\r\n        display: menuHidden? 'none' : 'flex',\r\n\r\n    }),\r\n    menuTogglerDiv: menuHidden => ({\r\n        flex: 1,\r\n        height: menuHidden ?  \"100%\"  : \"10vw\",\r\n        width: \"100%\",\r\n    }),\r\n  };\r\n  \r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\index.js",["87","88"],"\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nimport { \r\n    FaChevronDown,\r\n    FaChevronUp\r\n} from \"react-icons/fa\";\r\n\r\n\r\nimport './pages.css';\r\nimport { Home } from './home';\r\nimport { About } from './about';\r\nimport { Experience } from './experience';\r\nimport { Projects } from './projects';\r\nimport { Skills } from './skills';\r\nimport { Education } from './education';\r\nimport { Contact } from './contact';\r\nimport { Blog } from './blog';\r\n\r\n\r\n// import bg from './bg.png';\r\n\r\n// import background from './background.jpg';\r\n\r\nexport const Pages = props => {\r\n   \r\n    const pagesBoxRef = useRef(null);\r\n    const [isColumnRatio, setIsColumnRatio] = useState(false);\r\n   \r\n\r\n    useEffect ( () => {\r\n\r\n        function getRatioState() {\r\n\r\n            if(pagesBoxRef.current){\r\n\r\n                const canvas =  pagesBoxRef.current.getBoundingClientRect()\r\n                const ratio = canvas.width / canvas.height;\r\n                \r\n                // console.log(\" width is \", canvas.width, \" height \", canvas.height, \" ratio is \", ratio);\r\n\r\n                if(ratio <  0.72){\r\n                    setIsColumnRatio(true)\r\n                } else {\r\n                    setIsColumnRatio(false)\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n          \r\n          window.addEventListener(\"resize\", getRatioState);\r\n          getRatioState();\r\n          return () => window.removeEventListener(\"resize\", getRatioState);\r\n      \r\n    }, []);\r\n\r\n\r\n    \r\n\r\n    const handleScroll = (e) =>{\r\n        \r\n        console.log(\"scrolling 11111..\");    \r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"pages-container-div\" \r\n            ref={pagesBoxRef}\r\n            onScroll={handleScroll}>\r\n            {props.menuItems.map( (item, index) => {\r\n\r\n                return (\r\n                    <PageLoader \r\n                        name={item}\r\n                        key={index}\r\n                        isColumnRatio={isColumnRatio}\r\n                        {...props}/>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PageLoader = props => {\r\n\r\n    \r\n    switch (props.name) {\r\n        case 'home':\r\n            return (\r\n                <PageProvider  {...props} >\r\n                    <Home {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'about':\r\n            return (\r\n                <PageProvider  {...props} >\r\n                    <About {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'experience':\r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Experience  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'projects':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Projects  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'skills':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Skills  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'education':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Education  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'contact':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Contact  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'blog':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Blog  {...props} />\r\n                </PageProvider>\r\n            );\r\n        // case 'resume':            \r\n        //     return (\r\n        //         <PageProvider {...props} >\r\n        //             <Resume  {...props} />\r\n        //         </PageProvider>\r\n        //     );\r\n        default:\r\n            return null;\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const PageProvider = props => {\r\n\r\n    const pageRef = useRef(null)\r\n    const [isCollapsed, setIsCollapsed] = useState(true);\r\n\r\n\r\n    const collapsePage = () => {\r\n        setIsCollapsed(!isCollapsed);\r\n             \r\n    }\r\n\r\n    useEffect( () => {\r\n        if(isCollapsed===false){\r\n            pageRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n        \r\n    }, [isCollapsed])\r\n\r\n    useEffect( () => {\r\n        \r\n        if(props.selectedItem === props.name){\r\n            pageRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n\r\n    }, [props.selectedItem])\r\n\r\n\r\n    return (\r\n        <div \r\n            className={`page`}\r\n            ref={pageRef}>\r\n             <span className={`${props.name}-page-header`}\r\n                onClick={collapsePage}>\r\n                <div className=\"title-div\">\r\n                    <h1>\r\n                        {`${props.name.toUpperCase()}`}\r\n                    </h1>\r\n                </div>\r\n                <div className=\"collapse-icon-div\"\r\n                    style={styles.collapseIconDiv(props.isColumnRatio)}>\r\n                     {isCollapsed ? <FaChevronDown /> : <FaChevronUp /> }\r\n                </div>\r\n             </span>\r\n             <div className={'page-body'} \r\n                style={props.name != \"home\" ? styles.pageBody(props.isColumnRatio && isCollapsed) : {paddingTop:\"0px\", paddingBottom:\"0px\"}}>\r\n                {props.children}\r\n             </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n///////////////////////////////////////////////////\r\n//\r\n//      Portfolio Pages\r\n//\r\n//////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    pageBody: isCollapsed => ({\r\n        display: isCollapsed ? 'none' : 'flex',\r\n    }),\r\n    collapseIconDiv: isColumnRatio => ({\r\n        display: isColumnRatio ? 'flex' : 'none',\r\n    }),\r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\home\\index.js",["89","90","91","92","93","94","95"],"\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport IntroLogo from '../../assets/fullstack.engineer.logo.png';\r\nimport BackgroundImg from '../../assets/bg.jpg';\r\n\r\nimport './home.css'\r\n\r\nimport {\r\n\r\n    FaRegEnvelope,\r\n    FaLinkedin,\r\n    FaGithub,\r\n    FaEnvelope,\r\n} from \"react-icons/fa\";\r\n\r\nimport {\r\n    FiGithub,\r\n    FiLinkedin,\r\n    FiMail\r\n} from \"react-icons/fi\";\r\n\r\n\r\nimport { IconSVG } from '../../svgs'\r\n\r\n\r\n\r\nexport const Home = props => {\r\n\r\n    const [isColumnRatio, setIsColumnRatio] = useState(false);\r\n    const briefBioRef = useRef(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        function getRatioState() {\r\n\r\n            if (briefBioRef.current) {\r\n\r\n                const canvas = briefBioRef.current.getBoundingClientRect()\r\n                const ratio = canvas.width / canvas.height;\r\n\r\n                if (ratio > 0.7) {\r\n                    setIsColumnRatio(false)\r\n                } else {\r\n                    setIsColumnRatio(true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener(\"resize\", getRatioState);\r\n        getRatioState();\r\n        return () => window.removeEventListener(\"resize\", getRatioState);\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"home\"\r\n            style={styles.home(isColumnRatio)}\r\n            ref={briefBioRef}>\r\n            <div className=\"bio-intro-section\">\r\n                <BriefBioText {...props} />\r\n            </div>\r\n            <div className=\"bio-illustration-section\">\r\n                <IconSVG\r\n                    name={\"bio vector\"}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n{/* <BriefBioText {...props}/> */ }\r\n\r\nconst BriefBioText = props => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"bio-intro-wrapper\">\r\n            <div className=\"bio-intro-div\">\r\n                <div className=\"text-I-div\">\r\n                    Hello, I'm\r\n                </div>\r\n                <div className=\"text-II-div\">\r\n                    <span>Ayoub Soud </span><p> and I'm </p>\r\n                </div>\r\n                <div className=\"text-III-div\">\r\n                    Full Stack Mobile & Web Software Engineer\r\n                </div>\r\n                <div className=\"bio-illustration-section-mobile\">\r\n                    <IconSVG\r\n                        name={\"bio vector\"}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                    />\r\n                </div>\r\n                <div className=\"text-IV-div\">\r\n                    The broader the perspective, the greater the creativity\r\n                </div>\r\n                <div className=\"contact-button-div\">\r\n                    <button\r\n                        className=\"contact-me-btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            window.location.href = 'mailto:techyoob@gmail.com';\r\n                        }}\r\n                    >Contact Me</button>\r\n                </div>\r\n                <div className=\"social-media-div\" >\r\n                    <span\r\n                        className=\"social-btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            window.location.href = 'https://www.linkedin.com/in/ayoubsoud/';\r\n                        }}>\r\n                        <FiLinkedin />\r\n                    </span>\r\n                    <span\r\n                        className=\"social-btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            window.location.href = 'https://github.com/techyoob';\r\n                        }}>\r\n                        <FiGithub />\r\n                    </span>\r\n                    <span\r\n                        className=\"social-btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            window.location.href = 'mailto:techyoob@gmail.com';\r\n                        }}>\r\n                        <FiMail />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const BriefBioLogo = props => {\r\n\r\n    const introLogoRef = useRef(null);\r\n    const [viewBox, setViewBox] = useState({ x0: -50, y0: -50, width: 500, height: 500 });\r\n\r\n    useEffect(() => {\r\n\r\n        function handleViewBoxResize() {\r\n\r\n            if (introLogoRef.current) {\r\n\r\n                const canvas = introLogoRef.current.getBoundingClientRect()\r\n\r\n                console.log(\" wwidth and height are \", canvas.width, \"  and \", canvas.height);\r\n\r\n                const coordScale = Math.min(canvas.width, canvas.height)\r\n\r\n                setViewBox({\r\n                    ...viewBox,\r\n                    width: coordScale,\r\n                    height: coordScale,\r\n                    x0: -canvas.width / 2,\r\n                    y0: -canvas.height / 2\r\n                })\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleViewBoxResize);\r\n\r\n        handleViewBoxResize();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleViewBoxResize);\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"intro-logo-div\" style={styles.briefBioLogoDiv}>\r\n            <img\r\n                src={IntroLogo}\r\n                alt=\"fullstack intro graph, ayoub soud\" />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n\r\n    home: isColumnRatio => ({\r\n        // height:'100vh',\r\n        // width:'100%',\r\n        // backgroundImage:`url(${BackgroundImg})`,\r\n    }),\r\n    briefBioDiv: isColumnRatio => ({\r\n        display: 'flex',\r\n        flexDirection: isColumnRatio ? 'column-reverse' : 'row',\r\n        height: isColumnRatio ? '60%' : '50%',\r\n    }),\r\n    sectionOneDiv: isColumnRatio => ({\r\n        display: 'flex',\r\n        flex: isColumnRatio ? 2 : 3,\r\n    }),\r\n    p: smallScreen => ({\r\n        fontSize: smallScreen ? '0.9rem' : '0.9vw',\r\n        alignSelf: 'center',\r\n        margin: 0,\r\n    }),\r\n    briefBioLogoDiv: {\r\n        // backgroundImage:`url(${IntroLogo})`,\r\n    },\r\n\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\about\\index.js",["96","97","98"],"\r\n\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\nimport './about.css';\r\n\r\nimport about from '../../assets/jsons/about.json'\r\nimport Ayoub from '../../assets/ayoub.soud.jpg'\r\n\r\n\r\n\r\nexport const About = props => {\r\n\r\n\r\n    return (\r\n        <div className=\"about-page\">\r\n            <div className=\"bio-div\">\r\n                <div className=\"picture-div\">\r\n                    <MyPicture />\r\n                </div>\r\n                <div className={\"bio-details-div\"} >\r\n                    <h3>Welcome to my portfolio</h3>\r\n                    <div className=\"picture-div-mobile\">\r\n                        <MyPicture />\r\n                    </div>\r\n                    <p>\r\n                        {about.p1} \r\n                    </p>\r\n                    <p>\r\n                        {about.p2}                    \r\n                    </p>\r\n                    <p>\r\n                        {about.p3}                    \r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst MyPicture = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"picture-frame\">\r\n            <img className=\"ayoub-about-img\" src={Ayoub} alt=\"ayoub soud\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    aboutTextDiv: smallScreen =>({\r\n    }),\r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\experience\\index.js",["99","100"],"import React, { useRef, useEffect } from 'react';\r\nimport './experience.css';\r\n\r\nimport experience from '../../assets/jsons/experience.json'\r\n\r\n\r\nimport { \r\n    FaLink,\r\n    FaMapMarkerAlt,\r\n} from \"react-icons/fa\";\r\n\r\nexport const Experience = props => {\r\n\r\n    return (\r\n        <div className=\"experience\">\r\n            <Timeline data={experience} name=\"job\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Timeline = props => {\r\n\r\n\r\n    return(\r\n        <div className=\"timeline-container\">\r\n            {props.data?.map( (item, i) => {\r\n                return (\r\n                    <div className={`timeline-item-container-${i%2 === 0 ? 'even' : 'odd'}`}\r\n                        key={i}>\r\n                        <div className=\"item-logo\">\r\n                    \r\n                        </div>\r\n                        <div className=\"item-timeline-vector\">\r\n                            <svg height=\"100%\" width=\"100%\">\r\n                                <line x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\" stroke=\"#7593b9\" strokeWidth=\"2\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"8\" fill=\"#7593b9\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"10\" fill=\"none\" stroke=\"#7593b9\"/>\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"item-content\">\r\n                            <div className=\"info-box\">\r\n                                <TimelineItemRenderer item={item} name={props.name}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst TimelineItemRenderer = (props) => {\r\n\r\n    switch(props.name){\r\n        case \"job\":\r\n            return (\r\n                <Job item={props.item} />\r\n                )\r\n        default:\r\n            return \"data missing!\";\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const Job = props => {\r\n\r\n\r\n    return(\r\n        <div className={\"job-container\"}>\r\n            <h2> {props.item.position} </h2>\r\n            <div className=\"job-name\">\r\n                <span> {props.item.name} </span>\r\n                {'link' in props.item\r\n                    ?   <a href={props.item.link} >\r\n                            <FaLink  />   \r\n                        </a>\r\n                    :   null \r\n                }\r\n            </div>\r\n            <span className=\"job-roles\">\r\n                <ul>\r\n                    {props.item?.roles.map( (role, i) => {\r\n                         return <li key={i}><h4>{role}</h4></li>\r\n                     })}\r\n                </ul>\r\n            </span>            \r\n            <div className=\"job-footer\">\r\n                <div className=\"job-location\">\r\n                    <FaMapMarkerAlt />\r\n                    <span> {props.item.location} </span>\r\n                </div>\r\n                <div className=\"job-period\">\r\n                    {props.item?.start + \" - \" + props.item?.end}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const Job = props => {\r\n\r\n\r\n//     return(\r\n//         <div className={\"job-div\"}  >\r\n//             <div className={\"job-header-div\"} >\r\n//                 <div className={\"job-tittle-div\"} >\r\n//                     {props.position}\r\n//                 </div>\r\n//                 <div className={\"job-name-div\"} >\r\n//                     {'link' in props?\r\n//                         <a href={props.link} >\r\n//                             <FaLink   />   \r\n//                         </a>\r\n//                     : null }\r\n//                     {props.name}\r\n//                 </div>\r\n//             </div>\r\n//             <div className={\"job-body-div\"} >\r\n//                 <h4> Roles & Accomplishments </h4>\r\n//                 <ul>\r\n//                    {props.roles.map( (role, i) => {\r\n//                         return <li key={i}>{role}</li>\r\n//                     })}\r\n//                 </ul>\r\n//             </div>\r\n//             <div className={\"job-footer-div\"} >\r\n//                 <span className=\"footer-detail-span\"> \r\n//                     {props.start + \" - \" + props.end +  \" | \"}\r\n//                         <FaMapMarkerAlt />\r\n//                     {props.location}\r\n//                 </span>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\projects\\index.js",["101","102","103","104","105"],"\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nimport './projects.css'\r\n\r\nimport projects from '../../assets/jsons/projects.json';\r\nimport { IconSVG } from '../../svgs'\r\n// import { ReactComponent  as Mongodb } from '../svgs/mongodb.svg'; \r\n\r\n\r\nimport { \r\n    FaReact,\r\n    FaLinkedin,\r\n    FaGithub,\r\n    FaLink,\r\n} from \"react-icons/fa\";\r\n\r\n\r\n\r\nexport const Projects = props => {\r\n\r\n    return (\r\n        \r\n        <div className=\"projects\" >\r\n            <div className=\"projects-wrapper\" >\r\n            {projects.map((item, i)=>{\r\n                return (\r\n                    <ProjectItem {...props}\r\n                        item={item}\r\n                        key={i}/>\r\n                );\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst ProjectItem = props => {\r\n\r\n    return (\r\n        <div className={\"project-div\"}>\r\n            <div className={\"project-body-div\"}>\r\n                <div className={\"project-info-div\"}> \r\n                    <div className=\"project-logo-div\">\r\n                        <IconSVG name={\"react\"} fill=\"#cc8673\" width=\"100%\" height=\"100%\"/>\r\n                    </div>                  \r\n                    <h4>{props.item.name}</h4>\r\n                    <p className={\"project-description-div\"}>  \r\n                        {props.item.description}\r\n                    </p>\r\n                </div>\r\n                <div className={\"project-skills-div\"}>\r\n                    {props.item.technologies.map( (tech, i) => {\r\n                        return <IconSVG key={i} name={tech} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />;\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className={\"project-footer-div\"}>\r\n            {Object.keys(props.item.links).map( (name, i) => {\r\n\r\n                const link = props.item.links[name]\r\n\r\n                return (\r\n                    <a \r\n                        className={\"link-button-div\"}\r\n                        key={i} \r\n                        href={link}>\r\n                        <div className={\"link-button-icon\"} >\r\n                            <LinkLoader name={name} link={link}/>\r\n                        </div>\r\n                        <div className={\"link-button-text\"}>\r\n                            {name}\r\n                        </div>\r\n                        \r\n                    </a>);\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const LinkLoader = (props) => {\r\n    \r\n\r\n    switch(props.name){\r\n        case \"GitHub\":\r\n            return (\r\n                <FaGithub />\r\n            );\r\n        case \"Demo\":\r\n             return (\r\n                <FaLink />\r\n            );\r\n        default:\r\n            return null;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = {\r\n    experience:{\r\n        height:'100%',\r\n    },\r\n    jobHeaderDiv: smallScreen =>({\r\n        fontSize: smallScreen? '1rem' : '1.6rem',\r\n        fontWeight:600,\r\n    }),\r\n    \r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\contact\\index.js",["106","107","108","109"],"\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport './contact.css';\r\n\r\nimport contacts from '../../assets/jsons/contacts.json'\r\nimport { IconSVG } from '../../svgs'\r\n\r\n\r\n\r\n\r\n\r\nexport const Contact = props => {\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <section className=\"contacts\">\r\n            {contacts.map((option, i)=>{\r\n                return (\r\n                    <div className=\"contact-option-div\" \r\n                        key={i}\r\n                        onClick={(e) => {\r\n                            window.location.href=`${option.path}`;\r\n                            }}>\r\n                        <div className=\"contact-icon-div\">\r\n                            <IconSVG fill=\"#52616b\" name={option.name} x=\"0\" y=\"0\" width=\"90%\" height=\"90%\" />          \r\n                        </div>\r\n                        <span className=\"contact-link-div\">\r\n                            <a>{option.link}</a>\r\n                        </span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </section>\r\n    );\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\education\\index.js",["110","111","112","113","114","115"],"\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport './education.css';\r\n\r\nimport education from '../../assets/jsons/education.json';\r\nimport { IconSVG } from '../../svgs';\r\n\r\n\r\nimport { \r\n    FaLink,\r\n    FaMapMarkerAlt,\r\n} from \"react-icons/fa\";\r\n\r\n\r\n\r\nexport const Education = props => {\r\n\r\n    return (\r\n        <div className=\"education\">\r\n            <Timeline data={education} name=\"education\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Timeline = props => {\r\n\r\n\r\n    return(\r\n        <div className=\"timeline-container\">\r\n            {props.data?.map( (item, i) => {\r\n                return (\r\n                    <div className={`timeline-item-container-${i%2 === 0 ? 'even' : 'odd'}`}\r\n                        key={i}>\r\n                        <div className=\"item-logo\">\r\n                    \r\n                        </div>\r\n                        <div className=\"item-timeline-vector\">\r\n                            <svg height=\"100%\" width=\"100%\">\r\n                                <line x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\" stroke=\"#deb887\" strokeWidth=\"2\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"8\" fill=\"#deb887\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"10\" fill=\"none\" stroke=\"#deb887\"/>\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"item-content\">\r\n                            <div className=\"info-box\">\r\n                                <TimelineItemRenderer item={item} name={props.name}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst TimelineItemRenderer = (props) => {\r\n\r\n    switch(props.name){\r\n        case \"education\":\r\n            return (\r\n                <School item={props.item} />\r\n                )\r\n        default:\r\n            return \"data missing!\";\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const School = props => {\r\n\r\n\r\n    return(\r\n        <div className={\"school-container\"}>\r\n            <h2> {props.item.name} </h2>\r\n            <h4> {props.item.subject}</h4>\r\n            <span className=\"school-footer\">\r\n                <p> {props.item.location}  <FaMapMarkerAlt /> </p>\r\n                <p> {props.item.graduation} </p> \r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const Education = props => {\r\n\r\n//     const timelineRef = useRef(null)\r\n//     const schoolRef = useRef(null)\r\n\r\n//     const [timelineSize, setTimelineSize] = useState({w:0, h:0})\r\n//     const [schoolSize, setSchoolSize] = useState({w:0, h:0})\r\n\r\n\r\n//     useEffect(()=>{\r\n\r\n//         if(timelineRef.current){\r\n//             const canvas =  timelineRef.current.getBoundingClientRect()\r\n//             setTimelineSize({w:canvas.width , h:canvas.height})\r\n//         }\r\n\r\n//     }, [])\r\n\r\n\r\n//     return (\r\n//         <section className=\"education\" style={styles.education}>\r\n//             {education.map((school, i)=>{\r\n//                 return (\r\n//                     <div className=\"school-div\"\r\n//                         key={i} \r\n//                         style={{flexDirection:props.isColumnRatio ? \"row\" : (i % 2===0) ? \"row\" : \"row-reverse\"}}>\r\n//                         <div  className=\"school-logo-div\"\r\n//                             style={{display:props.isColumnRatio ? \"none\" : \"flex\"}}>\r\n\r\n//                         </div>\r\n//                         <div  className=\"school-timeline-div\"\r\n//                             ref={timelineRef}>\r\n//                             <svg \r\n//                                 width={timelineSize.w}\r\n//                                 height={timelineSize.h}\r\n//                                 viewBox={`0 0 ${timelineSize.w} ${timelineSize.h}`}>\r\n//                                     <circle cx=\"50%\" cy=\"50%\" r=\"3%\" fill=\"black\"/>\r\n//                                     <line x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\" stroke=\"black\" strokeWidth=\"2\"/>\r\n//                             </svg>\r\n//                         </div>\r\n//                         <div className=\"school-info-wrapper\">\r\n//                             <div className=\"school-info-div\">\r\n//                                 <h2> {school.name} </h2>\r\n//                                 <h4> {school.subject}</h4>\r\n//                                 <span className=\"school-loc-grad\">\r\n//                                     <p> {school.location} </p>\r\n//                                     <p> {school.graduation} </p> \r\n//                                 </span>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                     </div>\r\n//                 )\r\n//             })}\r\n//         </section>\r\n//     );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    education: {\r\n        \r\n    },\r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\blog\\index.js",["116","117","118"],"\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport './blog.css';\r\n\r\n\r\n\r\n\r\nexport const Blog = props => {\r\n    return (\r\n        <div className=\"blog\">\r\n\r\n        </div>\r\n    );\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\skills\\index.js",["119","120","121","122","123","124","125"],"\r\n\r\n\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nimport './skills.css'\r\nimport techsList from '../../assets/jsons/technologies.json';\r\nimport langsList from '../../assets/jsons/languages.json';\r\nimport othersList from '../../assets/jsons/others.json';\r\nimport { IconSVG } from '../../svgs'\r\n\r\n\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport skills from '../../assets/jsons/skills.json'\r\nimport graph from '../../assets/jsons/graphs.json'\r\n\r\n\r\nimport { \r\n    FaAngleDoubleLeft,\r\n    FaAngleDoubleRight,\r\n} from \"react-icons/fa\";\r\n// import { useSideScroll } from \"./useSideScroll\";\r\n\r\nimport Carousel from \"../../components/carousel.js\";\r\n\r\n\r\nexport const Skills = props => {\r\n\r\n    const skillsRef = useRef(null)\r\n    const [slides, setSlides] = useState(3)\r\n\r\n    useEffect(() => {\r\n        const resizeListener = () => {            \r\n        \r\n            const newSlides = Math.floor(window.innerWidth/395) + 1\r\n            setSlides(newSlides)            \r\n        };\r\n        resizeListener()\r\n        \r\n        window.addEventListener('resize', resizeListener);\r\n    \r\n        return () => {\r\n          window.removeEventListener('resize', resizeListener);\r\n        }\r\n      }, [])\r\n\r\n    \r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: slides,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 2000\r\n      };\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div className=\"skills-div\"\r\n            ref={skillsRef}>\r\n\r\n            <div className=\"slider-container-div\">\r\n                <Slider {...settings}>\r\n                    {skills?.map((item, i)=>{                        \r\n                    return (\r\n                        <div className=\"slider-item-container\"\r\n                            key={i}>\r\n                                <div className=\"slider-item-box\">\r\n                                    <div className=\"slider-item-title-div\">\r\n                                        {item.name}\r\n                                    </div>\r\n                                    <div className=\"slider-item-body-div\">\r\n                                        {item.children.map((skill, j)=>{\r\n                                            return (\r\n                                                <div className=\"skill-div\" key={j}>\r\n                                                    <div className=\"skill-logo\">\r\n                                                        <IconSVG name={skill.name}\r\n                                                            width=\"90%\"\r\n                                                            height=\"90%\"\r\n                                                            fill=\"#775786\"/>\r\n                                                    </div>\r\n                                                    <span className=\"skill-name\">\r\n                                                        {skill.name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                </div>\r\n                                </div>                                    \r\n                        </div>\r\n                    )\r\n                    })}\r\n                </Slider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\svgs\\index.js",["126","127","128","129","130","131","132"],"\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\n\r\n\r\nimport { \r\n    FaCogs,\r\n    FaLinkedin,\r\n    FaGithub,\r\n    FaLink,\r\n    FaRegImages\r\n} from \"react-icons/fa\" ;\r\n\r\n\r\nimport { ReactComponent  as FullStack } from './fullstack.svg';\r\nimport { ReactComponent  as BackEnd } from './backend.svg'\r\nimport { ReactComponent  as FrontEnd } from './frontend.svg';\r\nimport { ReactComponent  as Database } from './database.svg';\r\nimport { ReactComponent  as D3JS } from './d3js.svg';\r\nimport { ReactComponent  as Iot } from './iot.svg';\r\nimport { ReactComponent  as Arduino } from './arduino.svg';\r\nimport { ReactComponent  as Ti } from './ti.svg';\r\nimport { ReactComponent  as DotNet } from './.net.svg';\r\nimport { ReactComponent  as NodeJS } from './nodejs.svg';\r\nimport { ReactComponent  as ExpressJS } from './expressjs.svg';\r\nimport { ReactComponent  as Mobile } from './mobile.svg';\r\nimport { ReactComponent  as Web } from './web.svg';\r\nimport { ReactComponent  as ReactSVG } from './react.svg';\r\nimport { ReactComponent  as Android } from './android.svg'; \r\nimport { ReactComponent  as IoS } from './ios.svg';\r\n// import { ReactComponent  as MicroPython } from './micropython.svg';\r\nimport { ReactComponent  as CSS } from './css.svg'; \r\nimport { ReactComponent  as HTML } from './html.svg';\r\nimport { ReactComponent  as MySQOL } from './mysql.svg'; \r\nimport { ReactComponent  as MongoDB } from './mongodb.svg';\r\nimport { ReactComponent  as Cpp } from './c++.svg';\r\nimport { ReactComponent  as CSharp } from './csharp.svg';\r\nimport { ReactComponent  as Java } from './java.svg'; \r\nimport { ReactComponent  as Javascript } from './javascript.svg';\r\nimport { ReactComponent  as Python } from './python.svg';\r\nimport { ReactComponent  as Typescript } from './typescript.svg';\r\nimport { ReactComponent  as ImageProcessing } from './imageprocessing.svg';\r\nimport { ReactComponent  as Cuda } from './nvidia.svg';\r\nimport { ReactComponent  as GitHub } from './github.svg';\r\nimport { ReactComponent  as Email } from './email.svg';\r\nimport { ReactComponent  as LinkedIn } from './linkedin.svg';\r\n\r\n\r\nimport { ReactComponent  as BioVector } from './bio_illustrations.svg';\r\n\r\n\r\n\r\n\r\nexport const IconSVG = props => {\r\n\r\n    switch(props.name){\r\n        case \"full stack\":\r\n            return <FullStack x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                            y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                            width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                            height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                            fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        case \"back end\":\r\n            return <BackEnd x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                            y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                            width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                            height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                            fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        case \"front end\":\r\n            return <FrontEnd x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \"database\":\r\n            return <Database x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \"iot\":\r\n            return <Iot x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \".net\":\r\n            return(\r\n                <DotNet  x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"nodejs\":\r\n            return(\r\n                <NodeJS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"express.js\":\r\n            return(\r\n                <ExpressJS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"mobile\":\r\n            return < Mobile x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \"web\":\r\n            return <Web x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \"react\":\r\n        case \"react native\":\r\n            return(\r\n                <ReactSVG x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"android\":\r\n            return(\r\n                <Android x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"ios\":\r\n            return(\r\n                <IoS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"css\":\r\n            return(\r\n                <CSS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )            \r\n        case \"html\":\r\n            return(\r\n                <HTML x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"d3.js\":\r\n            return(\r\n                <D3JS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"mysql\":\r\n            return(\r\n                <MySQOL x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"mongodb\":\r\n            return(\r\n                <MongoDB x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"arduino\":\r\n            return(\r\n                <Arduino x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"texas instruments\":\r\n            return(\r\n                <Ti x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        // case \"micropython\":\r\n        //     return(\r\n        //         <svg width={props.width} height={props.height}>\r\n        //             <MicroPython x={\"5%\"} y={props.y} width={\"90%\"} height={props.height}/>\r\n        //         </svg>\r\n        //     )\r\n        case \"cpp\":\r\n            return(\r\n                <Cpp x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"csharp\":\r\n            return(\r\n                <CSharp x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"python\":\r\n            return(\r\n                <Python x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"java\":\r\n            return(\r\n                <Java x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"javascript\":\r\n            return(\r\n                <Javascript x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"typescript\":\r\n            return(\r\n                <Typescript x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"computer vision\":\r\n            return(\r\n                <ImageProcessing x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"cuda\":\r\n            return(\r\n                <Cuda x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"email\":\r\n            return(\r\n                <Email x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"github\":\r\n            return(\r\n                <GitHub x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n                \r\n        )\r\n        case \"linkedin\":\r\n            return(\r\n                <LinkedIn x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"bio vector\":\r\n            return(\r\n                <BioVector x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        default:\r\n            return null;\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\components\\carousel.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\menu\\index.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":2,"column":27,"nodeType":"139","messageId":"140","endLine":2,"endColumn":36},{"ruleId":"137","severity":1,"message":"141","line":9,"column":29,"nodeType":"139","messageId":"140","endLine":9,"endColumn":38},{"ruleId":"137","severity":1,"message":"142","line":13,"column":5,"nodeType":"139","messageId":"140","endLine":13,"endColumn":18},{"ruleId":"137","severity":1,"message":"143","line":14,"column":5,"nodeType":"139","messageId":"140","endLine":14,"endColumn":15},{"ruleId":"137","severity":1,"message":"144","line":15,"column":5,"nodeType":"139","messageId":"140","endLine":15,"endColumn":13},{"ruleId":"137","severity":1,"message":"145","line":16,"column":5,"nodeType":"139","messageId":"140","endLine":16,"endColumn":15},{"ruleId":"137","severity":1,"message":"146","line":102,"column":7,"nodeType":"139","messageId":"140","endLine":102,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":181,"column":8,"nodeType":"149","endLine":181,"endColumn":28,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":201,"column":35,"nodeType":"153","messageId":"154","endLine":201,"endColumn":37},{"ruleId":"137","severity":1,"message":"155","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":21},{"ruleId":"137","severity":1,"message":"142","line":12,"column":5,"nodeType":"139","messageId":"140","endLine":12,"endColumn":18},{"ruleId":"137","severity":1,"message":"143","line":13,"column":5,"nodeType":"139","messageId":"140","endLine":13,"endColumn":15},{"ruleId":"137","severity":1,"message":"144","line":14,"column":5,"nodeType":"139","messageId":"140","endLine":14,"endColumn":13},{"ruleId":"137","severity":1,"message":"145","line":15,"column":5,"nodeType":"139","messageId":"140","endLine":15,"endColumn":15},{"ruleId":"156","severity":1,"message":"157","line":84,"column":1,"nodeType":"158","messageId":"159","endLine":84,"endColumn":36},{"ruleId":"147","severity":1,"message":"160","line":222,"column":8,"nodeType":"149","endLine":222,"endColumn":10,"suggestions":"161"},{"ruleId":"137","severity":1,"message":"162","line":4,"column":17,"nodeType":"139","messageId":"140","endLine":4,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":4,"column":25,"nodeType":"139","messageId":"140","endLine":4,"endColumn":34},{"ruleId":"137","severity":1,"message":"163","line":55,"column":7,"nodeType":"139","messageId":"140","endLine":55,"endColumn":13},{"ruleId":"137","severity":1,"message":"162","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":1,"column":25,"nodeType":"139","messageId":"140","endLine":1,"endColumn":34},{"ruleId":"137","severity":1,"message":"162","line":3,"column":17,"nodeType":"139","messageId":"140","endLine":3,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":3,"column":25,"nodeType":"139","messageId":"140","endLine":3,"endColumn":34},{"ruleId":"137","severity":1,"message":"164","line":13,"column":5,"nodeType":"139","messageId":"140","endLine":13,"endColumn":12},{"ruleId":"137","severity":1,"message":"143","line":14,"column":5,"nodeType":"139","messageId":"140","endLine":14,"endColumn":15},{"ruleId":"137","severity":1,"message":"163","line":109,"column":7,"nodeType":"139","messageId":"140","endLine":109,"endColumn":13},{"ruleId":"137","severity":1,"message":"162","line":3,"column":17,"nodeType":"139","messageId":"140","endLine":3,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":3,"column":25,"nodeType":"139","messageId":"140","endLine":3,"endColumn":34},{"ruleId":"137","severity":1,"message":"165","line":3,"column":36,"nodeType":"139","messageId":"140","endLine":3,"endColumn":44},{"ruleId":"166","severity":1,"message":"167","line":31,"column":29,"nodeType":"168","endLine":31,"endColumn":32},{"ruleId":"137","severity":1,"message":"162","line":3,"column":17,"nodeType":"139","messageId":"140","endLine":3,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":3,"column":25,"nodeType":"139","messageId":"140","endLine":3,"endColumn":34},{"ruleId":"137","severity":1,"message":"165","line":3,"column":36,"nodeType":"139","messageId":"140","endLine":3,"endColumn":44},{"ruleId":"137","severity":1,"message":"169","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":17},{"ruleId":"137","severity":1,"message":"170","line":11,"column":5,"nodeType":"139","messageId":"140","endLine":11,"endColumn":11},{"ruleId":"137","severity":1,"message":"163","line":186,"column":7,"nodeType":"139","messageId":"140","endLine":186,"endColumn":13},{"ruleId":"137","severity":1,"message":"162","line":3,"column":17,"nodeType":"139","messageId":"140","endLine":3,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":3,"column":25,"nodeType":"139","messageId":"140","endLine":3,"endColumn":34},{"ruleId":"137","severity":1,"message":"165","line":3,"column":36,"nodeType":"139","messageId":"140","endLine":3,"endColumn":44},{"ruleId":"137","severity":1,"message":"171","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":17},{"ruleId":"137","severity":1,"message":"172","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":17},{"ruleId":"137","severity":1,"message":"173","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":18},{"ruleId":"137","severity":1,"message":"174","line":20,"column":8,"nodeType":"139","messageId":"140","endLine":20,"endColumn":13},{"ruleId":"137","severity":1,"message":"175","line":24,"column":5,"nodeType":"139","messageId":"140","endLine":24,"endColumn":22},{"ruleId":"137","severity":1,"message":"176","line":25,"column":5,"nodeType":"139","messageId":"140","endLine":25,"endColumn":23},{"ruleId":"137","severity":1,"message":"177","line":29,"column":8,"nodeType":"139","messageId":"140","endLine":29,"endColumn":16},{"ruleId":"137","severity":1,"message":"162","line":3,"column":17,"nodeType":"139","messageId":"140","endLine":3,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":3,"column":25,"nodeType":"139","messageId":"140","endLine":3,"endColumn":34},{"ruleId":"137","severity":1,"message":"178","line":8,"column":5,"nodeType":"139","messageId":"140","endLine":8,"endColumn":11},{"ruleId":"137","severity":1,"message":"143","line":9,"column":5,"nodeType":"139","messageId":"140","endLine":9,"endColumn":15},{"ruleId":"137","severity":1,"message":"144","line":10,"column":5,"nodeType":"139","messageId":"140","endLine":10,"endColumn":13},{"ruleId":"137","severity":1,"message":"170","line":11,"column":5,"nodeType":"139","messageId":"140","endLine":11,"endColumn":11},{"ruleId":"137","severity":1,"message":"179","line":12,"column":5,"nodeType":"139","messageId":"140","endLine":12,"endColumn":16},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FullStack' is defined but never used.","'FaRegEnvelope' is defined but never used.","'FaLinkedin' is defined but never used.","'FaGithub' is defined but never used.","'FaEnvelope' is defined but never used.","'MenuMyInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.name'. Either include it or remove the dependency array.","ArrayExpression",["182"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BackgroundImg' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'viewBox'. Either include it or remove the dependency array. You can also do a functional update 'setViewBox(v => ...)' if you only need 'viewBox' in the 'setViewBox' call.",["183"],"'useRef' is defined but never used.","'styles' is assigned a value but never used.","'FaReact' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'IconSVG' is defined but never used.","'FaLink' is defined but never used.","'techsList' is defined but never used.","'langsList' is defined but never used.","'othersList' is defined but never used.","'graph' is defined but never used.","'FaAngleDoubleLeft' is defined but never used.","'FaAngleDoubleRight' is defined but never used.","'Carousel' is defined but never used.","'FaCogs' is defined but never used.","'FaRegImages' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [props.name, props.selectedItem]",{"range":"188","text":"189"},"Update the dependencies array to be: [viewBox]",{"range":"190","text":"191"},[4562,4582],"[props.name, props.selectedItem]",[5363,5365],"[viewBox]"]