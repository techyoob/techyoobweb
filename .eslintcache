[{"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\index.js":"1","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\App.js":"2","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\reportWebVitals.js":"3","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\index.js":"4","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\index.js":"5","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\home\\index.js":"6","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\about\\index.js":"7","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\experience\\index.js":"8","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\projects\\index.js":"9","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\contact\\index.js":"10","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\education\\index.js":"11","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\blog\\index.js":"12","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\skills\\index.js":"13","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\components\\carousel.js":"14","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\menu\\index.js":"15","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\assets\\svgs\\index.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":965,"mtime":1630907631323,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":4250,"mtime":1625540064131,"results":"21","hashOfConfig":"18"},{"size":5426,"mtime":1630439319969,"results":"22","hashOfConfig":"18"},{"size":4687,"mtime":1630894408873,"results":"23","hashOfConfig":"18"},{"size":2038,"mtime":1630908488320,"results":"24","hashOfConfig":"18"},{"size":4392,"mtime":1625539742162,"results":"25","hashOfConfig":"18"},{"size":2875,"mtime":1625540208766,"results":"26","hashOfConfig":"18"},{"size":1060,"mtime":1625540099465,"results":"27","hashOfConfig":"18"},{"size":4910,"mtime":1630909649496,"results":"28","hashOfConfig":"18"},{"size":203,"mtime":1615882965641,"results":"29","hashOfConfig":"18"},{"size":3541,"mtime":1625540151073,"results":"30","hashOfConfig":"18"},{"size":1903,"mtime":1625539465453,"results":"31","hashOfConfig":"18"},{"size":2805,"mtime":1615858019297,"results":"32","hashOfConfig":"18"},{"size":16279,"mtime":1630908307856,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"loexyc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\index.js",[],["74","75"],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\App.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\reportWebVitals.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\index.js",["76","77"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport './header.css';\r\nimport { IoMdClose, IoMdMenu } from \"react-icons/io\";\r\n\r\nimport { Menu } from './menu';\r\n\r\n\r\nimport { \r\n    FiGithub,\r\n    FiLinkedin,\r\n    FiMail\r\n} from \"react-icons/fi\";\r\n\r\nimport { IconSVG } from '../assets/svgs'\r\n\r\n\r\n\r\n\r\n\r\nexport const Header = props => {\r\n\r\n    \r\n    const [menuHidden, setMenuHidden] = useState(true);\r\n\r\n \r\n    const onSelectMenuOption = (option) => {\r\n        props.navigate(option)\r\n        toggleMenu();\r\n    }\r\n\r\n    function toggleMenu(e) {\r\n\r\n        if(menuHidden){\r\n            setMenuHidden(false);\r\n        } else {\r\n            setMenuHidden(true);\r\n        }\r\n      }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"menu-overlay-div\" style={styles.MenuOverlayDiv(menuHidden)}>\r\n                <div className=\"menu-toggler-div\"  style={styles.menuTogglerDiv(menuHidden)} >\r\n                    <button className=\"menu-toggler-btn\" onClick={toggleMenu}>\r\n                        { menuHidden ? <IoMdMenu style={styles.icon}/> :  <IoMdClose style={styles.icon}/> }       \r\n                    </button>\r\n                </div>\r\n                <div className='menu-items-div' style={styles.menuItemsDiv(menuHidden)}>\r\n                 <Menu \r\n                    items={props.menuItems}\r\n                    selected={props.selectedItem}\r\n                    onItemSelect={onSelectMenuOption}/>\r\n            </div>\r\n            </div>\r\n            <div className='menu-badge-logo-div'>\r\n                <MenuBadge onItemSelect={props.navigate}/>\r\n            </div>\r\n            <div className='menu-options-div'>\r\n                <Menu \r\n                    items={props.menuItems}\r\n                    selected={props.selectedItem}\r\n                    onItemSelect={props.navigate}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nconst MenuBadge = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"badge-div\"\r\n            onClick={()=>props.onItemSelect(\"home\")}>\r\n            <div className=\"badge-logo-div\"> \r\n                <IconSVG name={'full stack'} fill=\"#86acbe\" width=\"70%\" height=\"70%\"/>\r\n            </div>\r\n            <div className=\"badge-title-div\"> \r\n                Full Stack\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst MenuMyInfo = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='menu-my-name-div'>\r\n                    Ayoub Soud\r\n                </div>                \r\n            <div className='menu-my-title-div'>\r\n                    Full Stack Web & mobile Software Engineer\r\n                </div>                \r\n            <div className='menu-my-socials-div'>\r\n                <span className=\"menu-social-btn\" \r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href='https://www.linkedin.com/in/ayoubsoud/';\r\n                        }}>\r\n                    <FiLinkedin />                    \r\n                </span>\r\n                <span className=\"menu-social-btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href='https://github.com/techyoob';\r\n                        }}>\r\n                    <FiGithub />\r\n                </span>\r\n                <span className=\"menu-social-btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            window.location.href='mailto:techyoob@gmail.com';\r\n                            }}>\r\n                        <FiMail />\r\n                    </span>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = {\r\n    icon: {\r\n      color:'#ffffff',\r\n      fontSize:'30px'\r\n    },\r\n    MenuOverlayDiv: menuHidden => ({\r\n        position: menuHidden? \"relative\" : \"absolute\",\r\n        width: menuHidden ? \"60px\" : \"45vw\",\r\n        height: \"100%\",\r\n        minHeight: menuHidden ? \"100%\" : \"650px\"\r\n    }),\r\n    menuItemsDiv: menuHidden => ({\r\n        display: menuHidden? 'none' : 'flex',\r\n\r\n    }),\r\n    menuTogglerDiv: menuHidden => ({\r\n        flex: 1,\r\n        height: menuHidden ?  \"100%\"  : \"10vw\",\r\n        width: \"100%\",\r\n    }),\r\n  };\r\n  \r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\index.js",["78","79","80","81","82"],"\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nimport { \r\n    FaChevronDown,\r\n    FaChevronUp\r\n} from \"react-icons/fa\";\r\n\r\n\r\nimport './pages.css';\r\nimport { Home } from './home';\r\nimport { About } from './about';\r\nimport { Experience } from './experience';\r\nimport { Projects } from './projects';\r\nimport { Skills } from './skills';\r\nimport { Education } from './education';\r\nimport { Contact } from './contact';\r\nimport { Blog } from './blog';\r\n\r\n\r\n\r\nexport const Pages = props => {\r\n   \r\n    const pagesBoxRef = useRef(null);\r\n    const [isColumnRatio, setIsColumnRatio] = useState(false);\r\n   \r\n\r\n    useEffect ( () => {\r\n\r\n        function getRatioState() {\r\n\r\n            if(pagesBoxRef.current){\r\n\r\n                const canvas =  pagesBoxRef.current.getBoundingClientRect()\r\n                const ratio = canvas.width / canvas.height;\r\n                \r\n                if(ratio <  0.72){\r\n                    setIsColumnRatio(true)\r\n                } else {\r\n                    setIsColumnRatio(false)\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n          \r\n          window.addEventListener(\"resize\", getRatioState);\r\n          getRatioState();\r\n          return () => window.removeEventListener(\"resize\", getRatioState);\r\n      \r\n    }, []);\r\n\r\n\r\n    \r\n\r\n    const handleScroll = (e) =>{\r\n        \r\n        console.log(\"scrolling 11111..\");    \r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"pages-container-div\" \r\n            ref={pagesBoxRef}\r\n            onScroll={handleScroll}>\r\n            {props.menuItems.map( (item, index) => {\r\n\r\n                return (\r\n                    <PageLoader \r\n                        name={item}\r\n                        key={index}\r\n                        isColumnRatio={isColumnRatio}\r\n                        {...props}/>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PageLoader = props => {\r\n\r\n    \r\n    switch (props.name) {\r\n        case 'home':\r\n            return (\r\n                <PageProvider  {...props} >\r\n                    <Home {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'about':\r\n            return (\r\n                <PageProvider  {...props} >\r\n                    <About {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'experience':\r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Experience  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'projects':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Projects  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'skills':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Skills  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'education':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Education  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'contact':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Contact  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'blog':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Blog  {...props} />\r\n                </PageProvider>\r\n            );\r\n        // case 'resume':            \r\n        //     return (\r\n        //         <PageProvider {...props} >\r\n        //             <Resume  {...props} />\r\n        //         </PageProvider>\r\n        //     );\r\n        default:\r\n            return null;\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const PageProvider = props => {\r\n\r\n    const pageRef = useRef(null)\r\n    const [isCollapsed, setIsCollapsed] = useState(false);\r\n\r\n\r\n    const collapsePage = () => {\r\n        setIsCollapsed(!isCollapsed);\r\n             \r\n    }\r\n\r\n    // useEffect( () => {\r\n    //     if(isCollapsed===false){\r\n    //         pageRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    //     }\r\n        \r\n    // }, [isCollapsed])\r\n\r\n    useEffect( () => {\r\n\r\n        if(props.selectedItem === props.name){\r\n            \r\n            pageRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n\r\n    }, [props.selectedItem])\r\n\r\n\r\n    return (\r\n        <div \r\n            className={`page`}\r\n            ref={pageRef}>\r\n             <span className={`${props.name}-page-header`}>\r\n                <div className=\"title-div\">\r\n                    <h1>\r\n                        {`${props.name.toUpperCase()}`}\r\n                    </h1>\r\n                </div>\r\n             </span>\r\n             <div className={'page-body'} \r\n                style={props.name != \"home\" ? styles.pageBody(props.isColumnRatio && isCollapsed) : {paddingTop:\"0px\", paddingBottom:\"0px\"}}>\r\n                {props.children}\r\n             </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n///////////////////////////////////////////////////\r\n//\r\n//      Portfolio Pages\r\n//\r\n//////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    pageBody: isCollapsed => ({\r\n        display: isCollapsed ? 'none' : 'flex',\r\n    }),\r\n    collapseIconDiv: isColumnRatio => ({\r\n        display: isColumnRatio ? 'flex' : 'none',\r\n    }),\r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\home\\index.js",["83","84","85","86"],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\about\\index.js",["87","88","89","90","91"],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\experience\\index.js",["92","93"],"import React, { useRef, useEffect } from 'react';\r\nimport './experience.css';\r\n\r\nimport experience from '../../assets/jsons/experience.json'\r\n\r\n\r\nimport { \r\n    FaLink,\r\n    FaMapMarkerAlt,\r\n} from \"react-icons/fa\";\r\n\r\nexport const Experience = props => {\r\n\r\n    return (\r\n        <div className=\"experience\">\r\n            <Timeline data={experience} name=\"job\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Timeline = props => {\r\n\r\n\r\n    return(\r\n        <div className=\"timeline-container\">\r\n            {props.data?.map( (item, i) => {\r\n                return (\r\n                    <div className={`timeline-item-container-${i%2 === 0 ? 'even' : 'odd'}`}\r\n                        key={i}>\r\n                        <div className=\"item-logo\">\r\n                    \r\n                        </div>\r\n                        <div className=\"item-timeline-vector\">\r\n                            <svg height=\"100%\" width=\"100%\">\r\n                                <line x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\" stroke=\"#7593b9\" strokeWidth=\"2\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"8\" fill=\"#7593b9\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"10\" fill=\"none\" stroke=\"#7593b9\"/>\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"item-content\">\r\n                            <div className=\"info-box\">\r\n                                <TimelineItemRenderer item={item} name={props.name}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst TimelineItemRenderer = (props) => {\r\n\r\n    switch(props.name){\r\n        case \"job\":\r\n            return (\r\n                <Job item={props.item} />\r\n                )\r\n        default:\r\n            return \"data missing!\";\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const Job = props => {\r\n\r\n\r\n    return(\r\n        <div className={\"job-container\"}>\r\n            <h2> {props.item.position} </h2>\r\n            <div className=\"job-name\">\r\n                <span> {props.item.name} </span>\r\n                {'link' in props.item\r\n                    ?   <a href={props.item.link} >\r\n                            <FaLink  />   \r\n                        </a>\r\n                    :   null \r\n                }\r\n            </div>\r\n            <span className=\"job-roles\">\r\n                <ul>\r\n                    {props.item?.roles.map( (role, i) => {\r\n                         return <li key={i}><h4>{role}</h4></li>\r\n                     })}\r\n                </ul>\r\n            </span>            \r\n            <div className=\"job-footer\">\r\n                <div className=\"job-location\">\r\n                    <FaMapMarkerAlt />\r\n                    <span> {props.item.location} </span>\r\n                </div>\r\n                <div className=\"job-period\">\r\n                    {props.item?.start + \" - \" + props.item?.end}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const Job = props => {\r\n\r\n\r\n//     return(\r\n//         <div className={\"job-div\"}  >\r\n//             <div className={\"job-header-div\"} >\r\n//                 <div className={\"job-tittle-div\"} >\r\n//                     {props.position}\r\n//                 </div>\r\n//                 <div className={\"job-name-div\"} >\r\n//                     {'link' in props?\r\n//                         <a href={props.link} >\r\n//                             <FaLink   />   \r\n//                         </a>\r\n//                     : null }\r\n//                     {props.name}\r\n//                 </div>\r\n//             </div>\r\n//             <div className={\"job-body-div\"} >\r\n//                 <h4> Roles & Accomplishments </h4>\r\n//                 <ul>\r\n//                    {props.roles.map( (role, i) => {\r\n//                         return <li key={i}>{role}</li>\r\n//                     })}\r\n//                 </ul>\r\n//             </div>\r\n//             <div className={\"job-footer-div\"} >\r\n//                 <span className=\"footer-detail-span\"> \r\n//                     {props.start + \" - \" + props.end +  \" | \"}\r\n//                         <FaMapMarkerAlt />\r\n//                     {props.location}\r\n//                 </span>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\projects\\index.js",["94","95","96","97","98"],"\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nimport './projects.css'\r\n\r\nimport projects from '../../assets/jsons/projects.json';\r\nimport { IconSVG } from '../../assets/svgs'\r\n\r\n\r\nimport { \r\n    FaReact,\r\n    FaLinkedin,\r\n    FaGithub,\r\n    FaLink,\r\n} from \"react-icons/fa\";\r\n\r\n\r\n\r\nexport const Projects = props => {\r\n\r\n    return (\r\n        \r\n        <div className=\"projects\" >\r\n            <div className=\"projects-wrapper\" >\r\n            {projects.map((item, i)=>{\r\n                return (\r\n                    <ProjectItem {...props}\r\n                        item={item}\r\n                        key={i}/>\r\n                );\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst ProjectItem = props => {\r\n\r\n    return (\r\n        <div className={\"project-div\"}>\r\n            <div className={\"project-body-div\"}>\r\n                <div className={\"project-info-div\"}> \r\n                    <div className=\"project-logo-div\">\r\n                        <IconSVG name={\"react\"} fill=\"#cc8673\" width=\"100%\" height=\"100%\"/>\r\n                    </div>                  \r\n                    <h4>{props.item.name}</h4>\r\n                    <p className={\"project-description-div\"}>  \r\n                        {props.item.description}\r\n                    </p>\r\n                </div>\r\n                <div className={\"project-skills-div\"}>\r\n                    {props.item.technologies.map( (tech, i) => {\r\n                        return <IconSVG key={i} name={tech} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />;\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className={\"project-footer-div\"}>\r\n            {Object.keys(props.item.links).map( (name, i) => {\r\n\r\n                const link = props.item.links[name]\r\n\r\n                return (\r\n                    <a \r\n                        className={\"link-button-div\"}\r\n                        key={i} \r\n                        href={link}>\r\n                        <div className={\"link-button-icon\"} >\r\n                            <LinkLoader name={name} link={link}/>\r\n                        </div>\r\n                        <div className={\"link-button-text\"}>\r\n                            {name}\r\n                        </div>\r\n                        \r\n                    </a>);\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const LinkLoader = (props) => {\r\n    \r\n\r\n    switch(props.name){\r\n        case \"GitHub\":\r\n            return (\r\n                <FaGithub />\r\n            );\r\n        case \"Demo\":\r\n             return (\r\n                <FaLink />\r\n            );\r\n        default:\r\n            return null;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = {\r\n    experience:{\r\n        height:'100%',\r\n    },\r\n    jobHeaderDiv: smallScreen =>({\r\n        fontSize: smallScreen? '1rem' : '1.6rem',\r\n        fontWeight:600,\r\n    }),\r\n    \r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\contact\\index.js",["99","100","101","102"],"\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport './contact.css';\r\n\r\nimport contacts from '../../assets/jsons/contacts.json'\r\nimport { IconSVG } from '../../assets/svgs'\r\n\r\n\r\n\r\n\r\n\r\nexport const Contact = props => {\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <section className=\"contacts\">\r\n            {contacts.map((option, i)=>{\r\n                return (\r\n                    <div className=\"contact-option-div\" \r\n                        key={i}\r\n                        onClick={(e) => {\r\n                            window.location.href=`${option.path}`;\r\n                            }}>\r\n                        <div className=\"contact-icon-div\">\r\n                            <IconSVG fill=\"#52616b\" name={option.name} x=\"0\" y=\"0\" width=\"90%\" height=\"90%\" />          \r\n                        </div>\r\n                        <span className=\"contact-link-div\">\r\n                            <a>{option.link}</a>\r\n                        </span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </section>\r\n    );\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\education\\index.js",["103","104","105","106","107","108"],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\blog\\index.js",["109","110","111"],"\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport './blog.css';\r\n\r\n\r\n\r\n\r\nexport const Blog = props => {\r\n    return (\r\n        <div className=\"blog\">\r\n\r\n        </div>\r\n    );\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\skills\\index.js",["112","113","114","115","116","117","118"],"\r\n\r\n\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nimport './skills.css'\r\nimport techsList from '../../assets/jsons/technologies.json';\r\nimport langsList from '../../assets/jsons/languages.json';\r\nimport othersList from '../../assets/jsons/others.json';\r\nimport { IconSVG } from '../../assets/svgs'\r\n\r\n\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport skills from '../../assets/jsons/skills.json'\r\nimport graph from '../../assets/jsons/graphs.json'\r\n\r\n\r\nimport { \r\n    FaAngleDoubleLeft,\r\n    FaAngleDoubleRight,\r\n} from \"react-icons/fa\";\r\n// import { useSideScroll } from \"./useSideScroll\";\r\n\r\nimport Carousel from \"../../components/carousel.js\";\r\n\r\n\r\nexport const Skills = props => {\r\n\r\n    const skillsRef = useRef(null)\r\n    const [slides, setSlides] = useState(3)\r\n\r\n    useEffect(() => {\r\n        const resizeListener = () => {            \r\n        \r\n            const newSlides = Math.floor(window.innerWidth/395) + 1\r\n            setSlides(newSlides)            \r\n        };\r\n        resizeListener()\r\n        \r\n        window.addEventListener('resize', resizeListener);\r\n    \r\n        return () => {\r\n          window.removeEventListener('resize', resizeListener);\r\n        }\r\n      }, [])\r\n\r\n    \r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: slides,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 2000\r\n      };\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div className=\"skills-div\"\r\n            ref={skillsRef}>\r\n\r\n            <div className=\"slider-container-div\">\r\n                <Slider {...settings}>\r\n                    {skills?.map((item, i)=>{                        \r\n                    return (\r\n                        <div className=\"slider-item-container\"\r\n                            key={i}>\r\n                                <div className=\"slider-item-box\">\r\n                                    <div className=\"slider-item-title-div\">\r\n                                        {item.name}\r\n                                    </div>\r\n                                    <div className=\"slider-item-body-div\">\r\n                                        {item.children.map((skill, j)=>{\r\n                                            return (\r\n                                                <div className=\"skill-div\" key={j}>\r\n                                                    <div className=\"skill-logo\">\r\n                                                        <IconSVG name={skill.name}\r\n                                                            width=\"90%\"\r\n                                                            height=\"90%\"\r\n                                                            fill=\"#775786\"/>\r\n                                                    </div>\r\n                                                    <span className=\"skill-name\">\r\n                                                        {skill.name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                </div>\r\n                                </div>                                    \r\n                        </div>\r\n                    )\r\n                    })}\r\n                </Slider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\components\\carousel.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\menu\\index.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\assets\\svgs\\index.js",["119","120","121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":27,"nodeType":"130","messageId":"131","endLine":2,"endColumn":36},{"ruleId":"128","severity":1,"message":"132","line":92,"column":7,"nodeType":"130","messageId":"131","endLine":92,"endColumn":17},{"ruleId":"128","severity":1,"message":"133","line":6,"column":5,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"128","severity":1,"message":"134","line":7,"column":5,"nodeType":"130","messageId":"131","endLine":7,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":158,"column":11,"nodeType":"130","messageId":"131","endLine":158,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":177,"column":8,"nodeType":"138","endLine":177,"endColumn":28,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":192,"column":35,"nodeType":"142","messageId":"143","endLine":192,"endColumn":37},{"ruleId":"128","severity":1,"message":"144","line":15,"column":8,"nodeType":"130","messageId":"131","endLine":15,"endColumn":16},{"ruleId":"128","severity":1,"message":"145","line":16,"column":10,"nodeType":"130","messageId":"131","endLine":16,"endColumn":17},{"ruleId":"128","severity":1,"message":"146","line":22,"column":12,"nodeType":"130","messageId":"131","endLine":22,"endColumn":25},{"ruleId":"128","severity":1,"message":"147","line":149,"column":7,"nodeType":"130","messageId":"131","endLine":149,"endColumn":13},{"ruleId":"128","severity":1,"message":"148","line":4,"column":17,"nodeType":"130","messageId":"131","endLine":4,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":4,"column":25,"nodeType":"130","messageId":"131","endLine":4,"endColumn":34},{"ruleId":"128","severity":1,"message":"145","line":10,"column":10,"nodeType":"130","messageId":"131","endLine":10,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":29,"column":1,"nodeType":"151","messageId":"152","endLine":45,"endColumn":11},{"ruleId":"128","severity":1,"message":"147","line":91,"column":7,"nodeType":"130","messageId":"131","endLine":91,"endColumn":13},{"ruleId":"128","severity":1,"message":"148","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":1,"column":25,"nodeType":"130","messageId":"131","endLine":1,"endColumn":34},{"ruleId":"128","severity":1,"message":"148","line":3,"column":17,"nodeType":"130","messageId":"131","endLine":3,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":3,"column":25,"nodeType":"130","messageId":"131","endLine":3,"endColumn":34},{"ruleId":"128","severity":1,"message":"153","line":12,"column":5,"nodeType":"130","messageId":"131","endLine":12,"endColumn":12},{"ruleId":"128","severity":1,"message":"154","line":13,"column":5,"nodeType":"130","messageId":"131","endLine":13,"endColumn":15},{"ruleId":"128","severity":1,"message":"147","line":108,"column":7,"nodeType":"130","messageId":"131","endLine":108,"endColumn":13},{"ruleId":"128","severity":1,"message":"148","line":3,"column":17,"nodeType":"130","messageId":"131","endLine":3,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":3,"column":25,"nodeType":"130","messageId":"131","endLine":3,"endColumn":34},{"ruleId":"128","severity":1,"message":"155","line":3,"column":36,"nodeType":"130","messageId":"131","endLine":3,"endColumn":44},{"ruleId":"156","severity":1,"message":"157","line":31,"column":29,"nodeType":"158","endLine":31,"endColumn":32},{"ruleId":"128","severity":1,"message":"148","line":3,"column":17,"nodeType":"130","messageId":"131","endLine":3,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":3,"column":25,"nodeType":"130","messageId":"131","endLine":3,"endColumn":34},{"ruleId":"128","severity":1,"message":"155","line":3,"column":36,"nodeType":"130","messageId":"131","endLine":3,"endColumn":44},{"ruleId":"128","severity":1,"message":"145","line":7,"column":10,"nodeType":"130","messageId":"131","endLine":7,"endColumn":17},{"ruleId":"128","severity":1,"message":"159","line":11,"column":5,"nodeType":"130","messageId":"131","endLine":11,"endColumn":11},{"ruleId":"128","severity":1,"message":"147","line":186,"column":7,"nodeType":"130","messageId":"131","endLine":186,"endColumn":13},{"ruleId":"128","severity":1,"message":"148","line":3,"column":17,"nodeType":"130","messageId":"131","endLine":3,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":3,"column":25,"nodeType":"130","messageId":"131","endLine":3,"endColumn":34},{"ruleId":"128","severity":1,"message":"155","line":3,"column":36,"nodeType":"130","messageId":"131","endLine":3,"endColumn":44},{"ruleId":"128","severity":1,"message":"160","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":17},{"ruleId":"128","severity":1,"message":"161","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":17},{"ruleId":"128","severity":1,"message":"162","line":11,"column":8,"nodeType":"130","messageId":"131","endLine":11,"endColumn":18},{"ruleId":"128","severity":1,"message":"163","line":20,"column":8,"nodeType":"130","messageId":"131","endLine":20,"endColumn":13},{"ruleId":"128","severity":1,"message":"164","line":24,"column":5,"nodeType":"130","messageId":"131","endLine":24,"endColumn":22},{"ruleId":"128","severity":1,"message":"165","line":25,"column":5,"nodeType":"130","messageId":"131","endLine":25,"endColumn":23},{"ruleId":"128","severity":1,"message":"166","line":29,"column":8,"nodeType":"130","messageId":"131","endLine":29,"endColumn":16},{"ruleId":"128","severity":1,"message":"148","line":3,"column":17,"nodeType":"130","messageId":"131","endLine":3,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":3,"column":25,"nodeType":"130","messageId":"131","endLine":3,"endColumn":34},{"ruleId":"128","severity":1,"message":"167","line":49,"column":37,"nodeType":"130","messageId":"131","endLine":49,"endColumn":43},{"ruleId":"128","severity":1,"message":"168","line":50,"column":38,"nodeType":"130","messageId":"131","endLine":50,"endColumn":45},{"ruleId":"128","severity":1,"message":"169","line":51,"column":39,"nodeType":"130","messageId":"131","endLine":51,"endColumn":47},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MenuMyInfo' is assigned a value but never used.","'FaChevronDown' is defined but never used.","'FaChevronUp' is defined but never used.","'collapsePage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.name'. Either include it or remove the dependency array.","ArrayExpression",["172"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'testySvg' is defined but never used.","'IconSVG' is defined but never used.","'isColumnRatio' is assigned a value but never used.","'styles' is assigned a value but never used.","'useRef' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'FaReact' is defined but never used.","'FaLinkedin' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FaLink' is defined but never used.","'techsList' is defined but never used.","'langsList' is defined but never used.","'othersList' is defined but never used.","'graph' is defined but never used.","'FaAngleDoubleLeft' is defined but never used.","'FaAngleDoubleRight' is defined but never used.","'Carousel' is defined but never used.","'ShapeI' is defined but never used.","'ShapeII' is defined but never used.","'ShapeIII' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [props.name, props.selectedItem]",{"range":"175","text":"176"},[4393,4413],"[props.name, props.selectedItem]"]