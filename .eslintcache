[{"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\index.js":"1","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\App.js":"2","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\reportWebVitals.js":"3","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\index.js":"4","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\index.js":"5","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\home\\index.js":"6","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\about\\index.js":"7","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\experience\\index.js":"8","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\projects\\index.js":"9","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\contact\\index.js":"10","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\education\\index.js":"11","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\blog\\index.js":"12","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\skills\\index.js":"13","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\components\\carousel.js":"14","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\menu\\index.js":"15","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\assets\\svgs\\index.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":979,"mtime":1635356171698,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":4250,"mtime":1625540064131,"results":"21","hashOfConfig":"18"},{"size":5432,"mtime":1634322664618,"results":"22","hashOfConfig":"18"},{"size":4514,"mtime":1631065445927,"results":"23","hashOfConfig":"18"},{"size":2038,"mtime":1630908488320,"results":"24","hashOfConfig":"18"},{"size":4392,"mtime":1631080944580,"results":"25","hashOfConfig":"18"},{"size":2871,"mtime":1631499709294,"results":"26","hashOfConfig":"18"},{"size":1387,"mtime":1631504380936,"results":"27","hashOfConfig":"18"},{"size":2486,"mtime":1631066523621,"results":"28","hashOfConfig":"18"},{"size":203,"mtime":1615882965641,"results":"29","hashOfConfig":"18"},{"size":3803,"mtime":1631502708691,"results":"30","hashOfConfig":"18"},{"size":1895,"mtime":1631058883909,"results":"31","hashOfConfig":"32"},{"size":2789,"mtime":1631505030268,"results":"33","hashOfConfig":"18"},{"size":23038,"mtime":1653974421505,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"196w9np",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"loexyc",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\index.js",[],["80","81"],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\App.js",["82"],"\n\nimport React, { Component, useState } from 'react';\n\nimport './App.css';\n\nimport { Header }  from './header';\nimport { Pages } from './pages';\n\n\n// const menuItems = ['home', 'about', 'experience', 'education', 'skills', 'projects', 'blog', 'contact', 'resume']\nconst menuItems = ['home', 'about', 'education',  'skills', 'experience',  'projects', 'contact', 'resume']\n\n\nfunction App() {\n\n  const [ selectedItem, setSelectedItem] = useState(\"home\");\n\n  function navigate(name){  \n    setSelectedItem(name);\n  }\n\n\n\n\n\n  return (\n    <div className=\"main-frame-div\">\n       <div className=\"header-div\">\n          <Header\n            menuItems={menuItems}\n            selectedItem={selectedItem}\n            navigate={navigate}\n          />\n       </div>\n       <div className=\"body-div\">\n          <Pages\n            menuItems={menuItems}\n            selectedItem={selectedItem}\n            navigate={navigate}\n          />\n       </div>\n    </div>\n  );\n}\n\n\nexport default App;\n\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\reportWebVitals.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\index.js",["83","84"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport './header.css';\r\nimport { IoMdClose, IoMdMenu } from \"react-icons/io\";\r\n\r\nimport { Menu } from './menu';\r\n\r\n\r\nimport { \r\n    FiGithub,\r\n    FiLinkedin,\r\n    FiMail\r\n} from \"react-icons/fi\";\r\n\r\nimport { IconSVG } from '../assets/svgs'\r\n\r\n\r\n\r\n\r\n\r\nexport const Header = props => {\r\n\r\n    \r\n    const [menuHidden, setMenuHidden] = useState(true);\r\n\r\n \r\n    const onSelectMenuOption = (option) => {\r\n        props.navigate(option)\r\n        toggleMenu();\r\n    }\r\n\r\n    function toggleMenu(e) {\r\n\r\n        if(menuHidden){\r\n            setMenuHidden(false);\r\n        } else {\r\n            setMenuHidden(true);\r\n        }\r\n      }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"menu-overlay-div\" style={styles.MenuOverlayDiv(menuHidden)}>\r\n                <div className=\"menu-toggler-div\"  style={styles.menuTogglerDiv(menuHidden)} >\r\n                    <button className=\"menu-toggler-btn\" onClick={toggleMenu}>\r\n                        { menuHidden ? <IoMdMenu style={styles.icon}/> :  <IoMdClose style={styles.icon}/> }       \r\n                    </button>\r\n                </div>\r\n                <div className='menu-items-div' style={styles.menuItemsDiv(menuHidden)}>\r\n                 <Menu \r\n                    items={props.menuItems}\r\n                    selected={props.selectedItem}\r\n                    onItemSelect={onSelectMenuOption}/>\r\n            </div>\r\n            </div>\r\n            <div className='menu-badge-logo-div'>\r\n                <MenuBadge onItemSelect={props.navigate}/>\r\n            </div>\r\n            <div className='menu-options-div'>\r\n                <Menu \r\n                    items={props.menuItems}\r\n                    selected={props.selectedItem}\r\n                    onItemSelect={props.navigate}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nconst MenuBadge = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"badge-div\"\r\n            onClick={()=>props.onItemSelect(\"home\")}>\r\n            <div className=\"badge-logo-div\"> \r\n                <IconSVG name={'full stack'} fill=\"#86acbe\" width=\"70%\" height=\"70%\"/>\r\n            </div>\r\n            <div className=\"badge-title-div\"> \r\n                Full Stack\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst MenuMyInfo = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='menu-my-name-div'>\r\n                    Ayoub Soud\r\n                </div>                \r\n            <div className='menu-my-title-div'>\r\n                    Full Stack Web & mobile Software Engineer\r\n                </div>                \r\n            <div className='menu-my-socials-div'>\r\n                <span className=\"menu-social-btn\" \r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href='https://www.linkedin.com/in/ayoubsoud/';\r\n                        }}>\r\n                    <FiLinkedin />                    \r\n                </span>\r\n                <span className=\"menu-social-btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href='https://github.com/techyoob';\r\n                        }}>\r\n                    <FiGithub />\r\n                </span>\r\n                <span className=\"menu-social-btn\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            window.location.href='mailto:techyoob@gmail.com';\r\n                            }}>\r\n                        <FiMail />\r\n                    </span>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = {\r\n    icon: {\r\n      color:'#ffffff',\r\n      fontSize:'30px'\r\n    },\r\n    MenuOverlayDiv: menuHidden => ({\r\n        position: menuHidden? \"relative\" : \"absolute\",\r\n        width: menuHidden ? \"60px\" : \"45vw\",\r\n        height: \"100%\",\r\n        minHeight: menuHidden ? \"100%\" : \"650px\"\r\n    }),\r\n    menuItemsDiv: menuHidden => ({\r\n        display: menuHidden? 'none' : 'flex',\r\n\r\n    }),\r\n    menuTogglerDiv: menuHidden => ({\r\n        flex: 1,\r\n        height: menuHidden ?  \"100%\"  : \"10vw\",\r\n        width: \"100%\",\r\n    }),\r\n  };\r\n  \r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\index.js",["85","86","87","88","89"],"\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nimport { \r\n    FaChevronDown,\r\n    FaChevronUp\r\n} from \"react-icons/fa\";\r\n\r\n\r\nimport './pages.css';\r\nimport { Home } from './home';\r\nimport { About } from './about';\r\nimport { Experience } from './experience';\r\nimport { Projects } from './projects';\r\nimport { Skills } from './skills';\r\nimport { Education } from './education';\r\nimport { Contact } from './contact';\r\nimport { Blog } from './blog';\r\n\r\n\r\n\r\nexport const Pages = props => {\r\n   \r\n    const pagesBoxRef = useRef(null);\r\n    const [isColumnRatio, setIsColumnRatio] = useState(false);\r\n   \r\n\r\n    useEffect ( () => {\r\n\r\n        function getRatioState() {\r\n\r\n            if(pagesBoxRef.current){\r\n\r\n                const canvas =  pagesBoxRef.current.getBoundingClientRect()\r\n                const ratio = canvas.width / canvas.height;\r\n                \r\n                if(ratio <  0.72){\r\n                    setIsColumnRatio(true)\r\n                } else {\r\n                    setIsColumnRatio(false)\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n          \r\n          window.addEventListener(\"resize\", getRatioState);\r\n          getRatioState();\r\n          return () => window.removeEventListener(\"resize\", getRatioState);\r\n      \r\n    }, []);\r\n\r\n\r\n    \r\n\r\n    const handleScroll = (e) =>{\r\n        \r\n        console.log(\"scrolling 11111..\");\r\n        \r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"pages-container-div\" \r\n            ref={pagesBoxRef}\r\n            onScroll={handleScroll}>\r\n            {props.menuItems.map( (item, index) => {\r\n\r\n                return (\r\n                    <PageLoader \r\n                        name={item}\r\n                        key={index}\r\n                        isColumnRatio={isColumnRatio}\r\n                        {...props}/>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PageLoader = props => {\r\n\r\n    \r\n    switch (props.name) {\r\n        case 'home':\r\n            return (\r\n                <PageProvider  {...props} >\r\n                    <Home {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'about':\r\n            return (\r\n                <PageProvider  {...props} >\r\n                    <About {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'experience':\r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Experience  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'projects':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Projects  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'skills':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Skills  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'education':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Education  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'contact':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Contact  {...props} />\r\n                </PageProvider>\r\n            );\r\n        case 'blog':            \r\n            return (\r\n                <PageProvider {...props} >\r\n                    <Blog  {...props} />\r\n                </PageProvider>\r\n            );\r\n        // case 'resume':            \r\n        //     return (\r\n        //         <PageProvider {...props} >\r\n        //             <Resume  {...props} />\r\n        //         </PageProvider>\r\n        //     );\r\n        default:\r\n            return null;\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const PageProvider = props => {\r\n\r\n    const pageRef = useRef(null)\r\n    const [isCollapsed, setIsCollapsed] = useState(false);\r\n\r\n\r\n    const collapsePage = () => {\r\n        setIsCollapsed(!isCollapsed);\r\n             \r\n    }\r\n\r\n    // useEffect( () => {\r\n    //     if(isCollapsed===false){\r\n    //         pageRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    //     }\r\n        \r\n    // }, [isCollapsed])\r\n\r\n    useEffect( () => {\r\n\r\n        if(props.selectedItem === props.name){\r\n            \r\n            pageRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n\r\n    }, [props.selectedItem])\r\n\r\n\r\n    return (\r\n        <div \r\n            className={`page`}\r\n            ref={pageRef}>\r\n             <span className={`${props.name}-page-header`}>\r\n                <div className=\"title-div\">\r\n                    <h1>\r\n                        {`${props.name.toUpperCase()}`}\r\n                    </h1>\r\n                </div>\r\n             </span>\r\n             <div className={'page-body'} \r\n                style={props.name != \"home\" ? styles.pageBody(props.isColumnRatio && isCollapsed) : {paddingTop:\"0px\", paddingBottom:\"0px\"}}>\r\n                {props.children}\r\n             </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n///////////////////////////////////////////////////\r\n//\r\n//      Portfolio Pages\r\n//\r\n//////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    pageBody: isCollapsed => ({\r\n        display: isCollapsed ? 'none' : 'flex',\r\n    }),\r\n    collapseIconDiv: isColumnRatio => ({\r\n        display: isColumnRatio ? 'flex' : 'none',\r\n    }),\r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\home\\index.js",["90","91","92","93"],"\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nimport './home.css'\r\n\r\n\r\nimport {\r\n    FiGithub,\r\n    FiLinkedin,\r\n    FiMail\r\n} from \"react-icons/fi\";\r\n\r\nimport testySvg from '../../assets/svgs/java.svg'\r\nimport { IconSVG, getSVG } from '../../assets/svgs'\r\n\r\n\r\n\r\nexport const Home = props => {\r\n\r\n    const [isColumnRatio, setIsColumnRatio] = useState(false);\r\n    const briefBioRef = useRef(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        function getRatioState() {\r\n\r\n            if (briefBioRef.current) {\r\n\r\n                const canvas = briefBioRef.current.getBoundingClientRect()\r\n                const ratio = canvas.width / canvas.height;\r\n\r\n                if (ratio > 0.7) {\r\n                    setIsColumnRatio(false)\r\n                } else {\r\n                    setIsColumnRatio(true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener(\"resize\", getRatioState);\r\n        getRatioState();\r\n        return () => window.removeEventListener(\"resize\", getRatioState);\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"home\"\r\n            style={{\r\n                backgroundImage:`url(${getSVG[2]})`,\r\n                backgroundRepeat:'no-repeat',\r\n                backgroundPosition:'left',\r\n                backgroundPositionY:'bottom',\r\n                backgroundSize:'fit'}}>\r\n                    <div className=\"bio-intro-section\">\r\n                        <BriefBioText {...props} />\r\n                    </div>\r\n                    <div className=\"bio-illustration-section\"\r\n                        style={{\r\n                        backgroundImage:`url(${getSVG[1]})`,\r\n                        backgroundRepeat:'no-repeat',\r\n                        backgroundPosition:'center',\r\n                        backgroundSize:'90% 90%'}}>\r\n                    </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst BriefBioText = props => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"bio-intro-wrapper\">\r\n            <h6 className=\"text-I-div\">\r\n                Hello, I'm\r\n            </h6>\r\n            <div className=\"text-II-div\">\r\n                <span>Ayoub Soud</span><h6> and I'm a</h6>\r\n            </div>\r\n            <div className=\"my-title\">\r\n                Full Stack Mobile & Web Software Engineer\r\n            </div>\r\n            <div className=\"my-quote\">\r\n                The broader the perspective, the greater the creativity\r\n            </div>\r\n            <button\r\n                className=\"contact-me-btn\"\r\n                onClick={(e) => {\r\n                    e.preventDefault();\r\n                    window.location.href = 'mailto:techyoob@gmail.com';\r\n                }}\r\n            >\r\n                Contact Me\r\n            </button>         \r\n            <div className=\"social-media-div\" >\r\n                <span\r\n                    className=\"social-btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href = 'https://www.linkedin.com/in/ayoubsoud/';\r\n                    }}>\r\n                    <FiLinkedin />\r\n                </span>\r\n                <span\r\n                    className=\"social-btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href = 'https://github.com/techyoob';\r\n                    }}>\r\n                    <FiGithub />\r\n                </span>\r\n                <span\r\n                    className=\"social-btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.location.href = 'mailto:techyoob@gmail.com';\r\n                    }}>\r\n                    <FiMail />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n\r\n    home: isColumnRatio => ({\r\n        // height:'100vh',\r\n        // width:'100%',\r\n        // backgroundImage:`url(${BackgroundImg})`,\r\n    }),\r\n    briefBioDiv: isColumnRatio => ({\r\n        display: 'flex',\r\n        flexDirection: isColumnRatio ? 'column-reverse' : 'row',\r\n        height: isColumnRatio ? '60%' : '50%',\r\n    }),\r\n    sectionOneDiv: isColumnRatio => ({\r\n        display: 'flex',\r\n        flex: isColumnRatio ? 2 : 3,\r\n    }),\r\n    p: smallScreen => ({\r\n        fontSize: smallScreen ? '0.9rem' : '0.9vw',\r\n        alignSelf: 'center',\r\n        margin: 0,\r\n    }),\r\n    briefBioLogoDiv: {\r\n        // backgroundImage:`url(${IntroLogo})`,\r\n    },\r\n\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\about\\index.js",["94","95","96","97","98"],"\r\n\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\nimport './about.css';\r\n\r\nimport about from '../../assets/jsons/about.json'\r\nimport Ayoub from '../../assets/imgs/ayoub.soud.jpg'\r\n\r\nimport { IconSVG, getSVG } from '../../assets/svgs'\r\n\r\n\r\nexport const About = props => {\r\n\r\n\r\n    return (\r\n        <div className=\"about-page\" >\r\n            <div className=\"mypic-illustration-container\">\r\n                <MyPicture />\r\n            </div>\r\n            <div className=\"about-me-container\">\r\n                <AboutMe />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n{/* <div className=\"bio-div\">\r\n<div className=\"picture-div\">\r\n    <MyPicture />\r\n</div>\r\n<div className={\"bio-details-div\"} >\r\n    <h3>Welcome to my portfolio</h3>\r\n    <div className=\"picture-div-mobile\">\r\n        <MyPicture />\r\n    </div>\r\n    <p>\r\n        {about.p1} \r\n    </p>\r\n    <p>\r\n        {about.p2}                    \r\n    </p>\r\n</div>\r\n</div> */}\r\n\r\n// style={{\r\n//     backgroundImage:`url(${getSVG[3]})`,\r\n//     backgroundRepeat:'no-repeat',\r\n//     backgroundPositionX:'right',\r\n//     backgroundPositionY:'center',\r\n//     backgroundSize:'80% 90%'}}\r\n\r\nconst MyPicture = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"mypic-illustration\"\r\n            style={{\r\n                backgroundImage:`url(${getSVG[3]})`,\r\n                backgroundRepeat:'no-repeat',\r\n                backgroundPosition:'center',\r\n                backgroundSize:'100% 100%'}}>\r\n                    <div className=\"picture-frame\">\r\n                        <img className=\"ayoub-about-img\" src={Ayoub} alt=\"ayoub soud\"/>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AboutMe = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"about-me\">\r\n            <h3>Welcome to my portfolio</h3>\r\n            <p>\r\n                {about.p1} \r\n            </p>\r\n            <p>\r\n                {about.p2}                    \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = {\r\n    aboutTextDiv: smallScreen =>({\r\n    }),\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\experience\\index.js",["99","100"],"import React, { useRef, useEffect } from 'react';\r\nimport './experience.css';\r\n\r\nimport experience from '../../assets/jsons/experience.json'\r\n\r\n\r\nimport { \r\n    FaLink,\r\n    FaMapMarkerAlt,\r\n} from \"react-icons/fa\";\r\n\r\nexport const Experience = props => {\r\n\r\n    return (\r\n        <div className=\"experience\">\r\n            <Timeline data={experience} name=\"job\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Timeline = props => {\r\n\r\n\r\n    return(\r\n        <div className=\"timeline-container\">\r\n            {props.data?.map( (item, i) => {\r\n                return (\r\n                    <div className={`timeline-item-container-${i%2 === 0 ? 'even' : 'odd'}`}\r\n                        key={i}>\r\n                        <div className=\"item-logo\">\r\n                    \r\n                        </div>\r\n                        <div className=\"item-timeline-vector\">\r\n                            <svg height=\"100%\" width=\"100%\">\r\n                                <line x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\" stroke=\"#457c99\" strokeWidth=\"2\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"8\" fill=\"#457c99\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"10\" fill=\"none\" stroke=\"#457c99\"/>\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"item-content\">\r\n                            <div className=\"info-box\">\r\n                                <TimelineItemRenderer item={item} name={props.name}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst TimelineItemRenderer = (props) => {\r\n\r\n    switch(props.name){\r\n        case \"job\":\r\n            return (\r\n                <Job item={props.item} />\r\n                )\r\n        default:\r\n            return \"data missing!\";\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const Job = props => {\r\n\r\n\r\n    return(\r\n        <div className={\"job-container\"}>\r\n            <h2> {props.item.position} </h2>\r\n            <div className=\"job-name\">\r\n                <span> {props.item.name} </span>\r\n                {'link' in props.item\r\n                    ?   <a href={props.item.link} >\r\n                            <FaLink  />   \r\n                        </a>\r\n                    :   null \r\n                }\r\n            </div>\r\n            <span className=\"job-roles\">\r\n                <ul>\r\n                    {props.item?.roles.map( (role, i) => {\r\n                         return <li key={i}><h4>{role}</h4></li>\r\n                     })}\r\n                </ul>\r\n            </span>            \r\n            <div className=\"job-footer\">\r\n                <div className=\"job-location\">\r\n                    <FaMapMarkerAlt />\r\n                    <span> {props.item.location} </span>\r\n                </div>\r\n                <div className=\"job-period\">\r\n                    {props.item?.start + \" - \" + props.item?.end}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const Job = props => {\r\n\r\n\r\n//     return(\r\n//         <div className={\"job-div\"}  >\r\n//             <div className={\"job-header-div\"} >\r\n//                 <div className={\"job-tittle-div\"} >\r\n//                     {props.position}\r\n//                 </div>\r\n//                 <div className={\"job-name-div\"} >\r\n//                     {'link' in props?\r\n//                         <a href={props.link} >\r\n//                             <FaLink   />   \r\n//                         </a>\r\n//                     : null }\r\n//                     {props.name}\r\n//                 </div>\r\n//             </div>\r\n//             <div className={\"job-body-div\"} >\r\n//                 <h4> Roles & Accomplishments </h4>\r\n//                 <ul>\r\n//                    {props.roles.map( (role, i) => {\r\n//                         return <li key={i}>{role}</li>\r\n//                     })}\r\n//                 </ul>\r\n//             </div>\r\n//             <div className={\"job-footer-div\"} >\r\n//                 <span className=\"footer-detail-span\"> \r\n//                     {props.start + \" - \" + props.end +  \" | \"}\r\n//                         <FaMapMarkerAlt />\r\n//                     {props.location}\r\n//                 </span>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\projects\\index.js",["101","102","103"],"\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nimport './projects.css'\r\n\r\nimport projects from '../../assets/jsons/projects.json';\r\nimport { IconSVG } from '../../assets/svgs'\r\n\r\n\r\nimport {\r\n    FaGithub,\r\n    FaLink,\r\n} from \"react-icons/fa\";\r\n\r\n\r\n\r\nexport const Projects = props => {\r\n\r\n    return (\r\n        \r\n        <div className=\"projects\" >\r\n            <div className=\"projects-wrapper\" >\r\n            {projects.map((item, i)=>{\r\n                return (\r\n                    <ProjectItem {...props}\r\n                        item={item}\r\n                        key={i}/>\r\n                );\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst ProjectItem = props => {\r\n\r\n    return (\r\n        <div className=\"project-div\">\r\n            <div className=\"project-body-div\">\r\n                <div className=\"project-info-div\"> \r\n                    <div className=\"project-logo-div\">\r\n                        <IconSVG name={props.item.name} fill=\"#cc8673\" width=\"100%\" height=\"100%\"/>\r\n                    </div>                  \r\n                    <h4>{props.item.name}</h4>\r\n                    <p className=\"project-description-div\">  \r\n                        {props.item.description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"project-skills-div\">\r\n                    {props.item.technologies.map( (tech, i) => {\r\n                        return <IconSVG key={i} name={tech} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />;\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"project-footer-div\">\r\n            {Object.keys(props.item.links).map( (name, i) => {\r\n\r\n                const link = props.item.links[name]\r\n\r\n                return (\r\n                    <a \r\n                        className={\"link-button-div\"}\r\n                        key={i} \r\n                        href={link}>\r\n                        <div className={\"link-button-icon\"} >\r\n                            <LinkLoader name={name} link={link}/>\r\n                        </div>\r\n                        <div className={\"link-button-text\"}>\r\n                            {name}\r\n                        </div>\r\n                        \r\n                    </a>);\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const LinkLoader = (props) => {\r\n    \r\n\r\n    switch(props.name){\r\n        case \"GitHub\":\r\n            return (\r\n                <FaGithub />\r\n            );\r\n        case \"Demo\":\r\n             return (\r\n                <FaLink />\r\n            );\r\n        default:\r\n            return null;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = {\r\n    experience:{\r\n        height:'100%',\r\n    },\r\n    jobHeaderDiv: smallScreen =>({\r\n        fontSize: smallScreen? '1rem' : '1.6rem',\r\n        fontWeight:600,\r\n    }),\r\n    \r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\contact\\index.js",["104","105","106","107","108"],"\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport './contact.css';\r\n\r\nimport contacts from '../../assets/jsons/contacts.json'\r\nimport { IconSVG, getSVG } from '../../assets/svgs'\r\n\r\n\r\n\r\n\r\n\r\nexport const Contact = props => {\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <div className=\"contacts\">\r\n            <div className=\"contact-abstract-background-top\">\r\n                <IconSVG fill=\"#a6afb6\" name=\"wave background\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"/>\r\n            </div>\r\n            <section className=\"contact_list\" >\r\n                {contacts.map((option, i)=>{\r\n                    return (\r\n                        <div className=\"contact-option-div\" \r\n                            key={i}\r\n                            onClick={(e) => {\r\n                                window.location.href=`${option.path}`;\r\n                                }}>\r\n                            <div className=\"contact-icon-div\">\r\n                                <IconSVG fill=\"#52616b\" name={option.name} x=\"0\" y=\"0\" width=\"90%\" height=\"90%\" />          \r\n                            </div>\r\n                            <span className=\"contact-link-div\">\r\n                                <a>{option.link}</a>\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\education\\index.js",["109","110","111","112","113","114"],"\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport './education.css';\r\n\r\nimport education from '../../assets/jsons/education.json';\r\nimport { IconSVG } from '../../assets/svgs';\r\n\r\n\r\nimport { \r\n    FaLink,\r\n    FaMapMarkerAlt,\r\n} from \"react-icons/fa\";\r\n\r\n\r\n\r\nexport const Education = props => {\r\n\r\n    return (\r\n        <div className=\"education\">\r\n            <Timeline data={education} name=\"education\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Timeline = props => {\r\n\r\n\r\n    return(\r\n        <div className=\"timeline-container\">\r\n            {props.data?.map( (item, i) => {\r\n                return (\r\n                    <div className={`timeline-item-container-${i%2 === 0 ? 'even' : 'odd'}`}\r\n                        key={i}>\r\n                        <div className=\"item-logo\">\r\n                   \r\n                        </div>\r\n                        <div className=\"item-timeline-vector\">\r\n                            <svg height=\"100%\" width=\"100%\">\r\n                                <line x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\" stroke=\"#deb887\" strokeWidth=\"2\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"8\" fill=\"#deb887\"/>\r\n                                <circle cx=\"50%\" cy=\"15%\" r=\"10\" fill=\"none\" stroke=\"#deb887\"/>\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"item-content\">\r\n                            <div className=\"info-box\">\r\n                                <TimelineItemRenderer item={item} name={props.name}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst TimelineItemRenderer = (props) => {\r\n\r\n    switch(props.name){\r\n        case \"education\":\r\n            return (\r\n                <School item={props.item} />\r\n                )\r\n        default:\r\n            return \"data missing!\";\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const School = props => {\r\n\r\n\r\n    return(\r\n        <div className=\"school-container\">\r\n            <h2> {props.item.name} </h2>\r\n            <h4> {props.item.subject}</h4>\r\n            <span className=\"school-footer\">\r\n                <p> {props.item.location}  <FaMapMarkerAlt /> </p>\r\n                <p> {props.item.graduation} </p>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    education: {\r\n        \r\n    },\r\n  };\r\n  ","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\blog\\index.js",["115","116","117"],"\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport './blog.css';\r\n\r\n\r\n\r\n\r\nexport const Blog = props => {\r\n    return (\r\n        <div className=\"blog\">\r\n\r\n        </div>\r\n    );\r\n};\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\pages\\skills\\index.js",["118","119"],"\r\n\r\n\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nimport './skills.css';\r\nimport { IconSVG, getSVG } from '../../assets/svgs'\r\n\r\n\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport skills from '../../assets/jsons/skills.json';\r\n\r\n\r\nimport { \r\n    FaAngleDoubleLeft,\r\n    FaAngleDoubleRight,\r\n} from \"react-icons/fa\";\r\n\r\n\r\n\r\nexport const Skills = props => {\r\n\r\n    const skillsRef = useRef(null)\r\n    const [slides, setSlides] = useState(3)\r\n\r\n    useEffect(() => {\r\n        const resizeListener = () => {            \r\n        \r\n            const newSlides = Math.floor(window.innerWidth/395) + 1\r\n            setSlides(newSlides)            \r\n        };\r\n        resizeListener()\r\n        \r\n        window.addEventListener('resize', resizeListener);\r\n    \r\n        return () => {\r\n          window.removeEventListener('resize', resizeListener);\r\n        }\r\n      }, [])\r\n\r\n    \r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: slides,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 2000\r\n      };\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div className=\"skills\"\r\n            ref={skillsRef}>\r\n            <div className=\"abstract-background-top\"\r\n                style={{\r\n                    backgroundImage:`url(${getSVG[5]})`,\r\n                    backgroundRepeat:'no-repeat',\r\n                    backgroundSize:'contain'}}>\r\n\r\n            </div>\r\n            <div className=\"skills-boxes\">\r\n                <div className=\"slider-container-div\">\r\n                    <Slider {...settings}>\r\n                    {skills?.map((item, i)=>{                        \r\n                    return (\r\n                        <div className=\"slider-item-container\"\r\n                            key={i}>\r\n                                <div className=\"slider-item-box\">\r\n                                    <div className=\"slider-item-title-div\">\r\n                                        {item.name}\r\n                                    </div>\r\n                                    <div className=\"slider-item-body-div\">\r\n                                        {item.children.map((skill, j)=>{\r\n                                            return (\r\n                                                <div className=\"skill-div\" key={j}>\r\n                                                    <div className=\"skill-logo\">\r\n                                                        <IconSVG name={skill.name}\r\n                                                            width=\"90%\"\r\n                                                            height=\"90%\"\r\n                                                            fill=\"#deb887\"/>\r\n                                                    </div>\r\n                                                    <span className=\"skill-name\">\r\n                                                        {skill.name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                </div>\r\n                                </div>                                    \r\n                        </div>\r\n                    )\r\n                    })}\r\n                </Slider>\r\n                </div>\r\n           </div>\r\n            <div className=\"abstract-background-bottom\"\r\n                style={{\r\n                    backgroundImage:`url(${getSVG[5]})`,\r\n                    backgroundRepeat:'no-repeat',\r\n                    backgroundSize:'contain'}}>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\components\\carousel.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\header\\menu\\index.js",[],"D:\\Projects\\Portfolio\\React\\techyoobweb\\src\\assets\\svgs\\index.js",["120","121","122","123","124","125","126","127"],"\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport fullstack, { ReactComponent  as FullStack } from './fullstack.svg';\r\nimport { ReactComponent  as BackEnd } from './backend.svg'\r\nimport { ReactComponent  as FrontEnd } from './frontend.svg';\r\nimport { ReactComponent  as Database } from './database.svg';\r\nimport { ReactComponent  as D3JS } from './d3js.svg';\r\nimport { ReactComponent  as Iot } from './iot.svg';\r\nimport { ReactComponent  as Arduino } from './arduino.svg';\r\nimport { ReactComponent  as Ti } from './ti.svg';\r\nimport { ReactComponent  as DotNet } from './.net.svg';\r\nimport { ReactComponent  as NodeJS } from './nodejs.svg';\r\nimport { ReactComponent  as ExpressJS } from './expressjs.svg';\r\nimport { ReactComponent  as Mobile } from './mobile.svg';\r\nimport { ReactComponent  as Web } from './web.svg';\r\nimport { ReactComponent  as ReactSVG } from './react.svg';\r\nimport { ReactComponent  as Android } from './android.svg'; \r\nimport { ReactComponent  as IoS } from './ios.svg';\r\n// import { ReactComponent  as MicroPython } from './micropython.svg';\r\nimport { ReactComponent  as CSS } from './css.svg'; \r\nimport { ReactComponent  as HTML } from './html.svg';\r\nimport { ReactComponent  as MySQOL } from './mysql.svg'; \r\nimport { ReactComponent  as MongoDB } from './mongodb.svg';\r\nimport { ReactComponent  as Cpp } from './c++.svg';\r\nimport { ReactComponent  as CSharp } from './csharp.svg';\r\nimport { ReactComponent  as Java } from './java.svg'; \r\nimport { ReactComponent  as Javascript } from './javascript.svg';\r\nimport { ReactComponent  as Python } from './python.svg';\r\nimport { ReactComponent  as Typescript } from './typescript.svg';\r\nimport { ReactComponent  as ImageProcessing } from './imageprocessing.svg';\r\nimport { ReactComponent  as Cuda } from './nvidia.svg';\r\nimport { ReactComponent  as GitHub } from './github.svg';\r\nimport { ReactComponent  as Email } from './email.svg';\r\nimport { ReactComponent  as LinkedIn } from './linkedin.svg';\r\nimport { ReactComponent  as Docker } from './docker.svg';\r\nimport { ReactComponent  as Flask } from './flask.svg';\r\nimport { ReactComponent  as Nginx } from './nginx.svg';\r\nimport { ReactComponent  as Jira } from './jira.svg';\r\nimport { ReactComponent  as RabbitMQ } from './rabbitmq.svg';\r\nimport { ReactComponent  as Memcached } from './memcached.svg';\r\nimport { ReactComponent  as Redis } from './redis.svg';\r\nimport { ReactComponent  as Micropython } from './micropython.svg';\r\n\r\n\r\nimport bioSVG, { ReactComponent  as BioVector } from './bio_illustrations2.svg';\r\nimport electionBox, { ReactComponent  as Pomodoro } from './pomodoro.svg';\r\nimport tradeScreener, { ReactComponent  as TradeScreener } from './trade_screener.svg';\r\nimport techyoobCom, { ReactComponent  as TechyoobCom } from './techyoob.com.svg';\r\n\r\nimport shapeI, { ReactComponent  as ShapeI } from './43.svg';\r\nimport shapeII, { ReactComponent  as ShapeII } from './55.svg';\r\nimport shapeIII, { ReactComponent  as ShapeIII } from './36.svg';\r\nimport shapeIV, { ReactComponent  as ShapeIV } from './56.svg';\r\n\r\n\r\n\r\n\r\nexport const IconSVG = props => {\r\n\r\n    switch(props.name){\r\n        case \"full stack\":\r\n            return <FullStack x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                            y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                            width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                            height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                            fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        case \"back end\":\r\n            return <BackEnd x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                            y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                            width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                            height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                            fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        case \"front end\":\r\n            return <FrontEnd x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \"database\":\r\n            return <Database x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \"iot\":\r\n            return <Iot x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \".net\":\r\n            return(\r\n                <DotNet  x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"node.js\":\r\n            return(\r\n                <NodeJS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"express.js\":\r\n            return(\r\n                <ExpressJS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"mobile\":\r\n            return < Mobile x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \"web\":\r\n            return <Web x={props.x} y={props.y} width={props.width} height={props.height}/>\r\n        case \"react\":\r\n        case \"react native\":\r\n            return(\r\n                <ReactSVG x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"android\":\r\n            return(\r\n                <Android x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"ios\":\r\n            return(\r\n                <IoS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"css\":\r\n            return(\r\n                <CSS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )            \r\n        case \"html\":\r\n            return(\r\n                <HTML x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"d3.js\":\r\n            return(\r\n                <D3JS x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"mysql\":\r\n            return(\r\n                <MySQOL x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"mongodb\":\r\n            return(\r\n                <MongoDB x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"arduino\":\r\n            return(\r\n                <Arduino x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"texas instruments\":\r\n            return(\r\n                <Ti x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        // case \"micropython\":\r\n        //     return(\r\n        //         <svg width={props.width} height={props.height}>\r\n        //             <MicroPython x={\"5%\"} y={props.y} width={\"90%\"} height={props.height}/>\r\n        //         </svg>\r\n        //     )\r\n        case \"cpp\":\r\n            return(\r\n                <Cpp x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"csharp\":\r\n            return(\r\n                <CSharp x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n            )\r\n        case \"python\":\r\n            return(\r\n                <Python x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"java\":\r\n            return(\r\n                <Java x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"javascript\":\r\n            return(\r\n                <Javascript x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"typescript\":\r\n            return(\r\n                <Typescript x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"computer vision\":\r\n            return(\r\n                <ImageProcessing x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"cuda\":\r\n            return(\r\n                <Cuda x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"email\":\r\n            return(\r\n                <Email x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"github\":\r\n            return(\r\n                <GitHub x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n                \r\n        )\r\n        case \"linkedin\":\r\n            return(\r\n                <LinkedIn x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>   \r\n        )\r\n        case \"docker\":\r\n            return(\r\n                <Docker x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"flask\":\r\n            return(\r\n                <Flask x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n        )\r\n        case \"nginx\":\r\n            return(\r\n                <Nginx x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"jira\":\r\n            return(\r\n                <Jira x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"rabbitmq\":\r\n            return(\r\n                <RabbitMQ x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"memcached\":\r\n            return(\r\n                <Memcached x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"redis\":\r\n            return(\r\n                <Redis x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"micropython\":\r\n            return(\r\n                <Micropython x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                        y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                        width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                        height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                        fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"bio vector\":\r\n            return(\r\n                <BioVector x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"Techyoob Web\":\r\n            return(\r\n                <TechyoobCom x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"Pomodoro\":\r\n            return(\r\n                <Pomodoro x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"Stock Screener\":\r\n            return(\r\n                <TradeScreener x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        case \"wave background\":\r\n            return(\r\n                <ShapeIV x={typeof props.x === 'undefined' ? 0 : props.x}\r\n                    y={typeof props.y === 'undefined' ? 0 : props.y}\r\n                    width={typeof props.width === 'undefined' ? \"100%\" : props.width}\r\n                    height={typeof props.height === 'undefined' ? \"100%\" : props.height}\r\n                    fill={typeof props.fill === 'undefined' ? \"#cacaca\" : props.fill}/>\r\n               \r\n        )\r\n        default:\r\n            return null;\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nexport const getSVG = {\r\n    0:fullstack,\r\n    1:bioSVG,\r\n    2:shapeI,\r\n    3:shapeII,\r\n    4:shapeIII,\r\n    5:shapeIV\r\n}",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":3,"column":17,"nodeType":"134","messageId":"135","endLine":3,"endColumn":26},{"ruleId":"132","severity":1,"message":"136","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":36},{"ruleId":"132","severity":1,"message":"137","line":92,"column":7,"nodeType":"134","messageId":"135","endLine":92,"endColumn":17},{"ruleId":"132","severity":1,"message":"138","line":6,"column":5,"nodeType":"134","messageId":"135","endLine":6,"endColumn":18},{"ruleId":"132","severity":1,"message":"139","line":7,"column":5,"nodeType":"134","messageId":"135","endLine":7,"endColumn":16},{"ruleId":"132","severity":1,"message":"140","line":159,"column":11,"nodeType":"134","messageId":"135","endLine":159,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":178,"column":8,"nodeType":"143","endLine":178,"endColumn":28,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":193,"column":35,"nodeType":"147","messageId":"148","endLine":193,"endColumn":37},{"ruleId":"132","severity":1,"message":"149","line":15,"column":8,"nodeType":"134","messageId":"135","endLine":15,"endColumn":16},{"ruleId":"132","severity":1,"message":"150","line":16,"column":10,"nodeType":"134","messageId":"135","endLine":16,"endColumn":17},{"ruleId":"132","severity":1,"message":"151","line":22,"column":12,"nodeType":"134","messageId":"135","endLine":22,"endColumn":25},{"ruleId":"132","severity":1,"message":"152","line":142,"column":7,"nodeType":"134","messageId":"135","endLine":142,"endColumn":13},{"ruleId":"132","severity":1,"message":"153","line":4,"column":17,"nodeType":"134","messageId":"135","endLine":4,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":4,"column":25,"nodeType":"134","messageId":"135","endLine":4,"endColumn":34},{"ruleId":"132","severity":1,"message":"150","line":10,"column":10,"nodeType":"134","messageId":"135","endLine":10,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":29,"column":1,"nodeType":"156","messageId":"157","endLine":45,"endColumn":11},{"ruleId":"132","severity":1,"message":"152","line":91,"column":7,"nodeType":"134","messageId":"135","endLine":91,"endColumn":13},{"ruleId":"132","severity":1,"message":"153","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":1,"column":25,"nodeType":"134","messageId":"135","endLine":1,"endColumn":34},{"ruleId":"132","severity":1,"message":"153","line":3,"column":17,"nodeType":"134","messageId":"135","endLine":3,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":3,"column":25,"nodeType":"134","messageId":"135","endLine":3,"endColumn":34},{"ruleId":"132","severity":1,"message":"152","line":106,"column":7,"nodeType":"134","messageId":"135","endLine":106,"endColumn":13},{"ruleId":"132","severity":1,"message":"153","line":3,"column":17,"nodeType":"134","messageId":"135","endLine":3,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":3,"column":25,"nodeType":"134","messageId":"135","endLine":3,"endColumn":34},{"ruleId":"132","severity":1,"message":"158","line":3,"column":36,"nodeType":"134","messageId":"135","endLine":3,"endColumn":44},{"ruleId":"132","severity":1,"message":"159","line":7,"column":19,"nodeType":"134","messageId":"135","endLine":7,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":35,"column":33,"nodeType":"162","endLine":35,"endColumn":36},{"ruleId":"132","severity":1,"message":"153","line":3,"column":17,"nodeType":"134","messageId":"135","endLine":3,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":3,"column":25,"nodeType":"134","messageId":"135","endLine":3,"endColumn":34},{"ruleId":"132","severity":1,"message":"158","line":3,"column":36,"nodeType":"134","messageId":"135","endLine":3,"endColumn":44},{"ruleId":"132","severity":1,"message":"150","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":17},{"ruleId":"132","severity":1,"message":"163","line":11,"column":5,"nodeType":"134","messageId":"135","endLine":11,"endColumn":11},{"ruleId":"132","severity":1,"message":"152","line":117,"column":7,"nodeType":"134","messageId":"135","endLine":117,"endColumn":13},{"ruleId":"132","severity":1,"message":"153","line":3,"column":17,"nodeType":"134","messageId":"135","endLine":3,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":3,"column":25,"nodeType":"134","messageId":"135","endLine":3,"endColumn":34},{"ruleId":"132","severity":1,"message":"158","line":3,"column":36,"nodeType":"134","messageId":"135","endLine":3,"endColumn":44},{"ruleId":"132","severity":1,"message":"164","line":20,"column":5,"nodeType":"134","messageId":"135","endLine":20,"endColumn":22},{"ruleId":"132","severity":1,"message":"165","line":21,"column":5,"nodeType":"134","messageId":"135","endLine":21,"endColumn":23},{"ruleId":"132","severity":1,"message":"153","line":3,"column":17,"nodeType":"134","messageId":"135","endLine":3,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":3,"column":25,"nodeType":"134","messageId":"135","endLine":3,"endColumn":34},{"ruleId":"132","severity":1,"message":"166","line":58,"column":8,"nodeType":"134","messageId":"135","endLine":58,"endColumn":19},{"ruleId":"132","severity":1,"message":"167","line":59,"column":8,"nodeType":"134","messageId":"135","endLine":59,"endColumn":21},{"ruleId":"132","severity":1,"message":"168","line":60,"column":8,"nodeType":"134","messageId":"135","endLine":60,"endColumn":19},{"ruleId":"132","severity":1,"message":"169","line":62,"column":37,"nodeType":"134","messageId":"135","endLine":62,"endColumn":43},{"ruleId":"132","severity":1,"message":"170","line":63,"column":38,"nodeType":"134","messageId":"135","endLine":63,"endColumn":45},{"ruleId":"132","severity":1,"message":"171","line":64,"column":39,"nodeType":"134","messageId":"135","endLine":64,"endColumn":47},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'MenuMyInfo' is assigned a value but never used.","'FaChevronDown' is defined but never used.","'FaChevronUp' is defined but never used.","'collapsePage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.name'. Either include it or remove the dependency array.","ArrayExpression",["174"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'testySvg' is defined but never used.","'IconSVG' is defined but never used.","'isColumnRatio' is assigned a value but never used.","'styles' is assigned a value but never used.","'useRef' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'getSVG' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FaLink' is defined but never used.","'FaAngleDoubleLeft' is defined but never used.","'FaAngleDoubleRight' is defined but never used.","'electionBox' is defined but never used.","'tradeScreener' is defined but never used.","'techyoobCom' is defined but never used.","'ShapeI' is defined but never used.","'ShapeII' is defined but never used.","'ShapeIII' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},"Update the dependencies array to be: [props.name, props.selectedItem]",{"range":"177","text":"178"},[4399,4419],"[props.name, props.selectedItem]"]